{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proposalNames",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "chairperson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "giveRightToVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "vote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Ballot.sol",
    "1": "contracts/console.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ballot.sol",
    "exportedSymbols": {
      "Ballot": [
        376
      ],
      "console": [
        8440
      ]
    },
    "id": 377,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "contracts/console.sol",
        "file": "./console.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 377,
        "sourceUnit": 8441,
        "src": "60:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ballot",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "85:35:0",
          "text": "@title Voting with delegation."
        },
        "fullyImplemented": true,
        "id": 376,
        "linearizedBaseContracts": [
          376
        ],
        "name": "Ballot",
        "nameLocation": "129:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Ballot.Voter",
            "id": 12,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "301:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "293:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "361:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "356:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 6,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "356:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "delegate",
                "nameLocation": "422:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "414:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "vote",
                "nameLocation": "471:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 12,
                "src": "463:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "463:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "277:5:0",
            "nodeType": "StructDefinition",
            "scope": 376,
            "src": "270:243:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Ballot.Proposal",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "598:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "590:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 13,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "651:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "643:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "643:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "571:8:0",
            "nodeType": "StructDefinition",
            "scope": 376,
            "src": "564:134:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e4176cf",
            "id": 19,
            "mutability": "mutable",
            "name": "chairperson",
            "nameLocation": "719:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 376,
            "src": "704:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 24,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "871:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 376,
            "src": "838:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
              "typeString": "mapping(address => struct Ballot.Voter)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "846:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "838:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                "typeString": "mapping(address => struct Ballot.Voter)"
              },
              "valueType": {
                "id": 22,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "857:5:0"
                },
                "referencedDeclaration": 12,
                "src": "857:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                  "typeString": "struct Ballot.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 28,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "958:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 376,
            "src": "940:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
              "typeString": "struct Ballot.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 26,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "940:8:0"
                },
                "referencedDeclaration": 17,
                "src": "940:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$17_storage_ptr",
                  "typeString": "struct Ballot.Proposal"
                }
              },
              "id": 27,
              "nodeType": "ArrayTypeName",
              "src": "940:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage_ptr",
                "typeString": "struct Ballot.Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "1080:789:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636f6e7374727563746f7228292063616c6c6564",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fb872da82d4d6de51dc0fe7a52f58a1f42f3db3bd501856bf13cf474f883d46",
                          "typeString": "literal_string \"constructor() called\""
                        },
                        "value": "constructor() called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4fb872da82d4d6de51dc0fe7a52f58a1f42f3db3bd501856bf13cf474f883d46",
                          "typeString": "literal_string \"constructor() called\""
                        }
                      ],
                      "expression": {
                        "id": 35,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8440,
                        "src": "1090:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8440_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 971,
                      "src": "1090:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:35:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1135:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1149:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1149:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1135:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:24:0"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 46,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1169:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 48,
                        "indexExpression": {
                          "id": 47,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1176:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1169:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "1169:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1198:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1169:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:30:0"
                },
                {
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "1400:352:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 68,
                                    "name": "proposalNames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "1608:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 70,
                                  "indexExpression": {
                                    "id": 69,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "1622:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1608:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1637:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "1592:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$17_storage_ptr_$",
                                  "typeString": "type(struct Ballot.Proposal storage pointer)"
                                }
                              },
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "voteCount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1592:48:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$17_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$17_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 64,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1577:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1577:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$17_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$17_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$17_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1577:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1577:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "70726f706f73616c4e616d65735b25645d3d",
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1667:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fd689db3fd117eda0c5060e6144fb8a221bcd4adedb61832b12cf0f03d1ae251",
                                "typeString": "literal_string \"proposalNames[%d]=\""
                              },
                              "value": "proposalNames[%d]="
                            },
                            {
                              "id": 79,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1689:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fd689db3fd117eda0c5060e6144fb8a221bcd4adedb61832b12cf0f03d1ae251",
                                "typeString": "literal_string \"proposalNames[%d]=\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 75,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8440,
                              "src": "1655:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$8440_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1084,
                            "src": "1655:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256) view"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1655:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "1655:36:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 85,
                                "name": "proposalNames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1724:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 87,
                              "indexExpression": {
                                "id": 86,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "1738:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1724:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 82,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8440,
                              "src": "1705:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$8440_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "logBytes32",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 943,
                            "src": "1705:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1705:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1705:36:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 57,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1369:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 58,
                        "name": "proposalNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1373:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1373:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1369:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "initializationExpression": {
                    "assignments": [
                      54
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1362:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "1354:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1354:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 56,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1366:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1354:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1395:3:0",
                      "subExpression": {
                        "id": 61,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1395:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 63,
                    "nodeType": "ExpressionStatement",
                    "src": "1395:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1349:403:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636f6e7374727563746f722829206368616972706572736f6e3d2573",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43f887405ebbc722e4c3179a194cdfd36e24c894c8b02396e64dfce2ba3a153",
                          "typeString": "literal_string \"constructor() chairperson=%s\""
                        },
                        "value": "constructor() chairperson=%s"
                      },
                      {
                        "id": 96,
                        "name": "chairperson",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1805:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f43f887405ebbc722e4c3179a194cdfd36e24c894c8b02396e64dfce2ba3a153",
                          "typeString": "literal_string \"constructor() chairperson=%s\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8440,
                        "src": "1761:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8440_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1135,
                      "src": "1761:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636f6e7374727563746f72282920706173736564",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1839:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_045ca2aac872c777adb9cd95f8fbe88853deabd5308e298e0d5f6986cf2965b6",
                          "typeString": "literal_string \"constructor() passed\""
                        },
                        "value": "constructor() passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_045ca2aac872c777adb9cd95f8fbe88853deabd5308e298e0d5f6986cf2965b6",
                          "typeString": "literal_string \"constructor() passed\""
                        }
                      ],
                      "expression": {
                        "id": 99,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8440,
                        "src": "1827:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$8440_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 971,
                      "src": "1827:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:35:0"
                }
              ]
            },
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "974:57:0",
              "text": "Create a new ballot to choose one of `proposalNames`."
            },
            "id": 106,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "proposalNames",
                  "nameLocation": "1065:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1048:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1048:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 31,
                    "nodeType": "ArrayTypeName",
                    "src": "1048:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:32:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:0"
            },
            "scope": 376,
            "src": "1036:833:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "2022:760:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2539:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2539:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 114,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2553:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2539:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2578:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
                          "typeString": "literal_string \"Only chairperson can give right to vote.\""
                        },
                        "value": "Only chairperson can give right to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
                          "typeString": "literal_string \"Only chairperson can give right to vote.\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2518:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:112:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2648:20:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 120,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "2649:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 122,
                            "indexExpression": {
                              "id": 121,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "2656:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2649:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2649:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520766f74657220616c726561647920766f7465642e",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2670:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
                          "typeString": "literal_string \"The voter already voted.\""
                        },
                        "value": "The voter already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
                          "typeString": "literal_string \"The voter already voted.\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 129,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "2715:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 131,
                            "indexExpression": {
                              "id": 130,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 108,
                              "src": "2722:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2715:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "2715:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2739:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2715:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2707:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2707:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2707:34:0"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 137,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "2751:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 139,
                        "indexExpression": {
                          "id": 138,
                          "name": "voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "2758:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2751:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2751:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2774:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2751:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:24:0"
                }
              ]
            },
            "functionSelector": "9e7b8d61",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveRightToVote",
            "nameLocation": "1982:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "2006:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1998:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1997:15:0"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2022:0:0"
            },
            "scope": 376,
            "src": "1973:809:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "2873:1507:0",
              "statements": [
                {
                  "assignments": [
                    153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 153,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "2926:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2912:20:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 152,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 151,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "2912:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "2912:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 158,
                  "initialValue": {
                    "baseExpression": {
                      "id": 154,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2935:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 157,
                    "indexExpression": {
                      "expression": {
                        "id": 155,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2942:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2942:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2935:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2912:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2971:13:0",
                        "subExpression": {
                          "expression": {
                            "id": 160,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153,
                            "src": "2972:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2972:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920766f7465642e",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2986:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
                          "typeString": "literal_string \"You already voted.\""
                        },
                        "value": "You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
                          "typeString": "literal_string \"You already voted.\""
                        }
                      ],
                      "id": 159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2963:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2963:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 167,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3026:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3032:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3032:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3026:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
                          "typeString": "literal_string \"Self-delegation is disallowed.\""
                        },
                        "value": "Self-delegation is disallowed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
                          "typeString": "literal_string \"Self-delegation is disallowed.\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3018:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:59:0"
                },
                {
                  "body": {
                    "id": 198,
                    "nodeType": "Block",
                    "src": "3538:181:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 183,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "3552:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 184,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "3557:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                                  "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                                }
                              },
                              "id": 186,
                              "indexExpression": {
                                "id": 185,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "3564:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3557:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage",
                                "typeString": "struct Ballot.Voter storage ref"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "3557:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3552:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "3552:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 191,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "3662:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 192,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3668:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3668:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3662:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3680:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
                                "typeString": "literal_string \"Found loop in delegation.\""
                              },
                              "value": "Found loop in delegation."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
                                "typeString": "literal_string \"Found loop in delegation.\""
                              }
                            ],
                            "id": 190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3654:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3654:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 197,
                        "nodeType": "ExpressionStatement",
                        "src": "3654:54:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 174,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3503:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 176,
                        "indexExpression": {
                          "id": 175,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "3510:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3503:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "3503:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3534:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3526:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3526:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3503:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 199,
                  "nodeType": "WhileStatement",
                  "src": "3496:223:0"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "delegate_",
                      "nameLocation": "3837:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "3823:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 201,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 200,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "3823:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "3823:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 206,
                  "initialValue": {
                    "baseExpression": {
                      "id": 203,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3849:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 205,
                    "indexExpression": {
                      "id": 204,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3856:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3849:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3823:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 208,
                            "name": "delegate_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "3941:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "3941:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3961:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3941:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3933:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3933:30:0"
                },
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 214,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "3973:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "3973:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3988:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3973:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3973:19:0"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 220,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "4002:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "4002:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 223,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "4020:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4002:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "4002:20:0"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 226,
                      "name": "delegate_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "4036:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter storage pointer"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "voted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7,
                    "src": "4036:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "4233:141:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 238,
                              "name": "delegate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "4330:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 240,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5,
                            "src": "4330:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 241,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4350:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5,
                            "src": "4350:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4330:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:33:0"
                      }
                    ]
                  },
                  "id": 246,
                  "nodeType": "IfStatement",
                  "src": "4032:342:0",
                  "trueBody": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "4053:174:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 228,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "4164:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 231,
                              "indexExpression": {
                                "expression": {
                                  "id": 229,
                                  "name": "delegate_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "4174:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                    "typeString": "struct Ballot.Voter storage pointer"
                                  }
                                },
                                "id": 230,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "vote",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "4174:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4164:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "4164:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 233,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4203:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5,
                            "src": "4203:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4164:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "4164:52:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 146,
              "nodeType": "StructuredDocumentation",
              "src": "2788:41:0",
              "text": "Delegate your vote to the voter `to`."
            },
            "functionSelector": "5c19a95c",
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "2843:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2860:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "2852:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2851:12:0"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:0:0"
            },
            "scope": 376,
            "src": "2834:1546:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4533:422:0",
              "statements": [
                {
                  "assignments": [
                    256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "4557:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "4543:20:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 255,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 254,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12,
                          "src": "4543:5:0"
                        },
                        "referencedDeclaration": 12,
                        "src": "4543:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 261,
                  "initialValue": {
                    "baseExpression": {
                      "id": 257,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "4566:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$12_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 260,
                    "indexExpression": {
                      "expression": {
                        "id": 258,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4573:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4573:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4566:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$12_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4543:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 263,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4602:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 264,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "4602:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4619:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4602:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173206e6f20726967687420746f20766f7465",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
                          "typeString": "literal_string \"Has no right to vote\""
                        },
                        "value": "Has no right to vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
                          "typeString": "literal_string \"Has no right to vote\""
                        }
                      ],
                      "id": 262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4594:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "4594:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4663:13:0",
                        "subExpression": {
                          "expression": {
                            "id": 271,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4664:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "4664:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f7465642e",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
                          "typeString": "literal_string \"Already voted.\""
                        },
                        "value": "Already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
                          "typeString": "literal_string \"Already voted.\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "4655:40:0"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 277,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "4705:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "4705:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4720:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4705:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:19:0"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 283,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "4734:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "4734:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 286,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "4748:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4734:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "4734:22:0"
                },
                {
                  "expression": {
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 289,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "4902:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 291,
                        "indexExpression": {
                          "id": 290,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "4912:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4902:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$17_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "4902:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 293,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "4935:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$12_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "4935:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4902:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:46:0"
                }
              ]
            },
            "documentation": {
              "id": 249,
              "nodeType": "StructuredDocumentation",
              "src": "4386:101:0",
              "text": "Give your vote (including votes delegated to you)\n to proposal `proposals[proposal].name`."
            },
            "functionSelector": "0121b93f",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "4501:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "4514:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4506:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4506:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4505:18:0"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4533:0:0"
            },
            "scope": 376,
            "src": "4492:463:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "5126:446:0",
              "statements": [
                {
                  "assignments": [
                    305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 305,
                      "mutability": "mutable",
                      "name": "winningVoteCount",
                      "nameLocation": "5144:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 351,
                      "src": "5136:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 304,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5136:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 307,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5163:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5136:28:0"
                },
                {
                  "body": {
                    "id": 349,
                    "nodeType": "Block",
                    "src": "5221:345:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 319,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "5239:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 321,
                              "indexExpression": {
                                "id": 320,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "5249:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5239:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "5239:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 323,
                            "name": "winningVoteCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "5264:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5239:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 348,
                        "nodeType": "IfStatement",
                        "src": "5235:321:0",
                        "trueBody": {
                          "id": 347,
                          "nodeType": "Block",
                          "src": "5282:274:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "70726f706f73616c735b25645d2e766f7465436f756e743d",
                                    "id": 328,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5333:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_62961b994baab58fa09b70eb8a6f6f62991ce9fb01cdbd0a70c34b9794bf570c",
                                      "typeString": "literal_string \"proposals[%d].voteCount=\""
                                    },
                                    "value": "proposals[%d].voteCount="
                                  },
                                  {
                                    "id": 329,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 309,
                                    "src": "5381:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 330,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "5404:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                        }
                                      },
                                      "id": 332,
                                      "indexExpression": {
                                        "id": 331,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 309,
                                        "src": "5414:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5404:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                        "typeString": "struct Ballot.Proposal storage ref"
                                      }
                                    },
                                    "id": 333,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "voteCount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "5404:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_62961b994baab58fa09b70eb8a6f6f62991ce9fb01cdbd0a70c34b9794bf570c",
                                      "typeString": "literal_string \"proposals[%d].voteCount=\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 325,
                                    "name": "console",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8440,
                                    "src": "5300:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_console_$8440_$",
                                      "typeString": "type(library console)"
                                    }
                                  },
                                  "id": 327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "log",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1611,
                                  "src": "5300:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256,uint256) view"
                                  }
                                },
                                "id": 334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5300:144:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 335,
                              "nodeType": "ExpressionStatement",
                              "src": "5300:144:0"
                            },
                            {
                              "expression": {
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 336,
                                  "name": "winningVoteCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "5462:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 337,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28,
                                      "src": "5481:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 339,
                                    "indexExpression": {
                                      "id": 338,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 309,
                                      "src": "5491:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5481:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$17_storage",
                                      "typeString": "struct Ballot.Proposal storage ref"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "5481:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5462:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 342,
                              "nodeType": "ExpressionStatement",
                              "src": "5462:41:0"
                            },
                            {
                              "expression": {
                                "id": 345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 343,
                                  "name": "winningProposal_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 302,
                                  "src": "5521:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 344,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "5540:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5521:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 346,
                              "nodeType": "ExpressionStatement",
                              "src": "5521:20:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 312,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "5194:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 313,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "5198:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5198:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5194:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 350,
                  "initializationExpression": {
                    "assignments": [
                      309
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "5187:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "5179:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5179:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 311,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5191:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5179:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5216:3:0",
                      "subExpression": {
                        "id": 316,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "5216:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 318,
                    "nodeType": "ExpressionStatement",
                    "src": "5216:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5174:392:0"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "4961:86:0",
              "text": "@dev Computes the winning proposal taking all\n previous votes into account."
            },
            "functionSelector": "609ff1bd",
            "id": 352,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningProposal",
            "nameLocation": "5061:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5076:2:0"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "winningProposal_",
                  "nameLocation": "5108:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 352,
                  "src": "5100:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5099:26:0"
            },
            "scope": 376,
            "src": "5052:520:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "5802:64:0",
              "statements": [
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 357,
                      "name": "winnerName_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "5812:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 358,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "5826:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 361,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 359,
                            "name": "winningProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "5836:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5836:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5826:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$17_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "5826:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5812:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "5812:47:0"
                }
              ]
            },
            "functionSelector": "e2ba53f0",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winnerName",
            "nameLocation": "5745:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5755:2:0"
            },
            "returnParameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "winnerName_",
                  "nameLocation": "5789:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "5781:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5780:21:0"
            },
            "scope": 376,
            "src": "5736:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "5929:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 371,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "5946:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$17_storage_$dyn_storage",
                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5946:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 370,
                  "id": 373,
                  "nodeType": "Return",
                  "src": "5939:23:0"
                }
              ]
            },
            "functionSelector": "0a9f46ad",
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposalsCount",
            "nameLocation": "5880:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5894:2:0"
            },
            "returnParameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "5920:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5919:9:0"
            },
            "scope": 376,
            "src": "5871:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 377,
        "src": "120:5852:0",
        "usedErrors": []
      }
    ],
    "src": "36:5937:0"
  },
  "bytecode": "",
  "bytecodeSha1": "55b77960c5df79630f919350263f57006ed91e72",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Ballot",
  "coverageMap": {
    "branches": {
      "0": {
        "Ballot.delegate": {
          "31": [
            2971,
            2984,
            true
          ],
          "32": [
            3026,
            3042,
            true
          ],
          "33": [
            3662,
            3678,
            true
          ],
          "34": [
            3941,
            3962,
            true
          ],
          "35": [
            4036,
            4051,
            false
          ]
        },
        "Ballot.giveRightToVote": {
          "37": [
            2539,
            2564,
            true
          ],
          "38": [
            2648,
            2668,
            true
          ],
          "39": [
            2715,
            2740,
            true
          ]
        },
        "Ballot.vote": {
          "29": [
            4602,
            4620,
            true
          ],
          "30": [
            4663,
            4676,
            true
          ]
        },
        "Ballot.winningProposal": {
          "36": [
            5239,
            5280,
            false
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "Ballot.delegate": {
          "6": [
            2963,
            3007
          ],
          "7": [
            3018,
            3077
          ],
          "8": [
            3552,
            3576
          ],
          "9": [
            3654,
            3708
          ],
          "10": [
            3933,
            3963
          ],
          "11": [
            3973,
            3992
          ],
          "12": [
            4002,
            4022
          ],
          "13": [
            4164,
            4216
          ],
          "14": [
            4330,
            4363
          ]
        },
        "Ballot.giveRightToVote": {
          "19": [
            2518,
            2630
          ],
          "20": [
            2640,
            2697
          ],
          "21": [
            2707,
            2741
          ],
          "22": [
            2751,
            2775
          ]
        },
        "Ballot.proposalsCount": {
          "0": [
            5939,
            5962
          ]
        },
        "Ballot.vote": {
          "1": [
            4594,
            4645
          ],
          "2": [
            4655,
            4695
          ],
          "3": [
            4705,
            4724
          ],
          "4": [
            4734,
            4756
          ],
          "5": [
            4902,
            4948
          ]
        },
        "Ballot.winnerName": {
          "23": [
            5812,
            5859
          ]
        },
        "Ballot.winningProposal": {
          "15": [
            5300,
            5444
          ],
          "16": [
            5462,
            5503
          ],
          "17": [
            5521,
            5541
          ],
          "18": [
            5216,
            5219
          ]
        }
      },
      "1": {
        "console.log": {
          "24": [
            5102,
            5161
          ],
          "25": [
            5945,
            6013
          ],
          "27": [
            6358,
            6429
          ],
          "28": [
            9913,
            9990
          ]
        },
        "console.logBytes32": {
          "26": [
            4882,
            4942
          ]
        }
      }
    }
  },
  "dependencies": [
    "console"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80635c19a95c116100665780635c19a95c14610117578063609ff1bd1461012a5780639e7b8d6114610132578063a3ec138d14610145578063e2ba53f0146101b657600080fd5b80630121b93f14610098578063013cf08b146100ad5780630a9f46ad146100da5780632e4176cf146100ec575b600080fd5b6100ab6100a63660046108a1565b6101be565b005b6100c06100bb3660046108a1565b6102b8565b604080519283526020830191909152015b60405180910390f35b6002545b6040519081526020016100d1565b6000546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100ab6101253660046108ba565b6102e6565b6100de6104f8565b6100ab6101403660046108ba565b6105d9565b6101876101533660046108ba565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100d1949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b6100de6106f1565b336000908152600160205260408120805490910361021a5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102605760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b6044820152606401610211565b6001818101805460ff191690911790556002808201839055815481549091908490811061028f5761028f6108ea565b906000526020600020906002020160010160008282546102af9190610916565b90915550505050565b600281815481106102c857600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103415760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610211565b336001600160a01b038316036103995760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610211565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561043d576001600160a01b03918216600090815260016020819052604090912001546101009004909116903382036104385760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610211565b610399565b6001600160a01b038216600090815260016020819052604090912080549091111561046757600080fd5b600182810180546001600160a81b0319166101006001600160a01b03871602178217905581015460ff16156104d9578154600282810154815481106104ae576104ae6108ea565b906000526020600020906002020160010160008282546104ce9190610916565b909155506104f39050565b8154815482906000906104ed908490610916565b90915550505b505050565b600080805b6002548110156105d457816002828154811061051b5761051b6108ea565b90600052602060002090600202016001015411156105c2576105976040518060400160405280601881526020017f70726f706f73616c735b25645d2e766f7465436f756e743d00000000000000008152508260028481548110610580576105806108ea565b90600052602060002090600202016001015461083d565b600281815481106105aa576105aa6108ea565b90600052602060002090600202016001015491508092505b806105cc8161092e565b9150506104fd565b505090565b6000546001600160a01b031633146106445760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610211565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106b15760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610211565b6001600160a01b038116600090815260016020526040902054156106d457600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106fd6104f8565b8154811061070d5761070d6108ea565b906000526020600020906002020160000154905090565b610767816040516024016107389190610994565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610880565b50565b6107af82826040516024016107809291906109a7565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610880565b5050565b610767816040516024016107c991815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b179052610880565b6107af828260405160240161080e9291906109c9565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610880565b6104f3838383604051602401610855939291906109f3565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000602082840312156108b357600080fd5b5035919050565b6000602082840312156108cc57600080fd5b81356001600160a01b03811681146108e357600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561092957610929610900565b500190565b60006001820161094057610940610900565b5060010190565b6000815180845260005b8181101561096d57602081850181015186830182015201610951565b8181111561097f576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006108e36020830184610947565b6040815260006109ba6040830185610947565b90508260208301529392505050565b6040815260006109dc6040830185610947565b905060018060a01b03831660208301529392505050565b606081526000610a066060830186610947565b6020830194909452506040015291905056fea26469706673582212203969ca0fd34fb2a80a26eea17733fce81ff78d9f9927b093359d173caec204f164736f6c634300080e0033",
  "deployedSourceMap": "120:5852:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4492:463;;;;;;:::i;:::-;;:::i;:::-;;940:27;;;;;;:::i;:::-;;:::i;:::-;;;;373:25:2;;;429:2;414:18;;407:34;;;;346:18;940:27:0;;;;;;;;5871:98;5946:9;:16;5871:98;;;598:25:2;;;586:2;571:18;5871:98:0;452:177:2;704:26:0;;;;;-1:-1:-1;;;;;704:26:0;;;;;;-1:-1:-1;;;;;798:32:2;;;780:51;;768:2;753:18;704:26:0;634:203:2;2834:1546:0;;;;;;:::i;:::-;;:::i;5052:520::-;;;:::i;1973:809::-;;;;;;:::i;:::-;;:::i;838:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;838:39:0;;;;;;;;;;;;;1358:25:2;;;1426:14;;1419:22;1414:2;1399:18;;1392:50;-1:-1:-1;;;;;1478:32:2;1473:2;1458:18;;1451:60;1542:2;1527:18;;1520:34;1345:3;1330:19;;1133:427;5736:130:0;;;:::i;4492:463::-;4573:10;4543:20;4566:18;;;:6;:18;;;;;4602:13;;4566:18;;4602;4594:51;;;;-1:-1:-1;;;4594:51:0;;1949:2:2;4594:51:0;;;1931:21:2;1988:2;1968:18;;;1961:30;-1:-1:-1;;;2007:18:2;;;2000:50;2067:18;;4594:51:0;;;;;;;;;4664:12;;;;;;4663:13;4655:40;;;;-1:-1:-1;;;4655:40:0;;2298:2:2;4655:40:0;;;2280:21:2;2337:2;2317:18;;;2310:30;-1:-1:-1;;;2356:18:2;;;2349:44;2410:18;;4655:40:0;2096:338:2;4655:40:0;4720:4;4705:12;;;:19;;-1:-1:-1;;4705:19:0;;;;;;4734:11;;;;:22;;;4935:13;;4902:19;;4935:13;;4734:11;4748:8;;4902:19;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;4492:463:0:o;940:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:27:0;:::o;2834:1546::-;2942:10;2912:20;2935:18;;;:6;:18;;;;;;;;2972:12;;;;;;2971:13;2963:44;;;;-1:-1:-1;;;2963:44:0;;3038:2:2;2963:44:0;;;3020:21:2;3077:2;3057:18;;;3050:30;-1:-1:-1;;;3096:18:2;;;3089:48;3154:18;;2963:44:0;2836:342:2;2963:44:0;3032:10;-1:-1:-1;;;;;3026:16:0;;;3018:59;;;;-1:-1:-1;;;3018:59:0;;3385:2:2;3018:59:0;;;3367:21:2;3424:2;3404:18;;;3397:30;3463:32;3443:18;;;3436:60;3513:18;;3018:59:0;3183:354:2;3018:59:0;-1:-1:-1;;;;;3503:10:0;;;3534:1;3503:10;;;:6;:10;;;;;;;;:19;;;;;;:33;3496:223;;-1:-1:-1;;;;;3557:10:0;;;;;;;:6;:10;;;;;;;;:19;;;;;;;;;3668:10;3662:16;;3654:54;;;;-1:-1:-1;;;3654:54:0;;3744:2:2;3654:54:0;;;3726:21:2;3783:2;3763:18;;;3756:30;3822:27;3802:18;;;3795:55;3867:18;;3654:54:0;3542:349:2;3654:54:0;3496:223;;;-1:-1:-1;;;;;3849:10:0;;3823:23;3849:10;;;:6;:10;;;;;;;;3941:16;;3849:10;;-1:-1:-1;3941:21:0;3933:30;;;;;;3988:4;3973:12;;;:19;;-1:-1:-1;;;;;;4002:20:0;3973:19;-1:-1:-1;;;;;4002:20:0;;;;;;;;4036:15;;;3973:19;4036:15;4032:342;;;4203:13;;4164:9;4174:14;;;;4164:25;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;4032:342:0;;-1:-1:-1;4032:342:0;;4350:13;;4330:33;;:9;;4350:13;;4330:33;;4350:13;;4330:33;:::i;:::-;;;;-1:-1:-1;;4032:342:0;2873:1507;;2834:1546;:::o;5052:520::-;5100:24;;;5174:392;5198:9;:16;5194:20;;5174:392;;;5264:16;5239:9;5249:1;5239:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:41;5235:321;;;5300:144;;;;;;;;;;;;;;;;;;5381:1;5404:9;5414:1;5404:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;5300:11;:144::i;:::-;5481:9;5491:1;5481:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;5462:41;;5540:1;5521:20;;5235:321;5216:3;;;;:::i;:::-;;;;5174:392;;;;5126:446;5052:520;:::o;1973:809::-;2553:11;;-1:-1:-1;;;;;2553:11:0;2539:10;:25;2518:112;;;;-1:-1:-1;;;2518:112:0;;4238:2:2;2518:112:0;;;4220:21:2;4277:2;4257:18;;;4250:30;4316:34;4296:18;;;4289:62;-1:-1:-1;;;4367:18:2;;;4360:38;4415:19;;2518:112:0;4036:404:2;2518:112:0;-1:-1:-1;;;;;2649:13:0;;;;;;:6;:13;;;;;;;;:19;;;;2648:20;2640:57;;;;-1:-1:-1;;;2640:57:0;;4647:2:2;2640:57:0;;;4629:21:2;4686:2;4666:18;;;4659:30;4725:26;4705:18;;;4698:54;4769:18;;2640:57:0;4445:348:2;2640:57:0;-1:-1:-1;;;;;2715:13:0;;;;;;:6;:13;;;;;:20;:25;2707:34;;;;;;-1:-1:-1;;;;;2751:13:0;;;;;2774:1;2751:13;;;;;;;;:24;1973:809::o;5736:130::-;5781:19;5826:9;5836:17;:15;:17::i;:::-;5826:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;5812:47;;5736:130;:::o;5053:112:1:-;5102:59;5157:2;5118:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5118:42:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:42:1;-1:-1:-1;;;5118:42:1;;;5102:15;:59::i;:::-;5053:112;:::o;5887:130::-;5945:68;6005:2;6009;5961:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5961:51:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5961:51:1;-1:-1:-1;;;5961:51:1;;;5945:15;:68::i;:::-;5887:130;;:::o;4832:114::-;4882:60;4938:2;4898:43;;;;;;598:25:2;;586:2;571:18;;452:177;4898:43:1;;;;-1:-1:-1;;4898:43:1;;;;;;;;;;;;;;-1:-1:-1;;;;;4898:43:1;-1:-1:-1;;;4898:43:1;;;4882:15;:60::i;6297:136::-;6358:71;6421:2;6425;6374:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6374:54:1;;;;;;;;;;;;;;-1:-1:-1;;;;;6374:54:1;-1:-1:-1;;;6374:54:1;;;6358:15;:71::i;9846:148::-;9913:77;9978:2;9982;9986;9929:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9929:60:1;;;;;;;;;;;;;;-1:-1:-1;;;;;9929:60:1;-1:-1:-1;;;9929:60:1;;;175:288;263:14;;128:42;372:2;359:16;;239:21;;263:14;359:16;128:42;399:5;388:68;379:77;;334:126;;175:288;:::o;14:180:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o;842:286::-;901:6;954:2;942:9;933:7;929:23;925:32;922:52;;;970:1;967;960:12;922:52;996:23;;-1:-1:-1;;;;;1048:31:2;;1038:42;;1028:70;;1094:1;1091;1084:12;1028:70;1117:5;842:286;-1:-1:-1;;;842:286:2:o;2439:127::-;2500:10;2495:3;2491:20;2488:1;2481:31;2531:4;2528:1;2521:15;2555:4;2552:1;2545:15;2571:127;2632:10;2627:3;2623:20;2620:1;2613:31;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2703:128;2743:3;2774:1;2770:6;2767:1;2764:13;2761:39;;;2780:18;;:::i;:::-;-1:-1:-1;2816:9:2;;2703:128::o;3896:135::-;3935:3;3956:17;;;3953:43;;3976:18;;:::i;:::-;-1:-1:-1;4023:1:2;4012:13;;3896:135::o;4798:472::-;4840:3;4878:5;4872:12;4905:6;4900:3;4893:19;4930:1;4940:162;4954:6;4951:1;4948:13;4940:162;;;5016:4;5072:13;;;5068:22;;5062:29;5044:11;;;5040:20;;5033:59;4969:12;4940:162;;;5120:6;5117:1;5114:13;5111:87;;;5186:1;5179:4;5170:6;5165:3;5161:16;5157:27;5150:38;5111:87;-1:-1:-1;5252:2:2;5231:15;-1:-1:-1;;5227:29:2;5218:39;;;;5259:4;5214:50;;4798:472;-1:-1:-1;;4798:472:2:o;5275:220::-;5424:2;5413:9;5406:21;5387:4;5444:45;5485:2;5474:9;5470:18;5462:6;5444:45;:::i;5500:291::-;5677:2;5666:9;5659:21;5640:4;5697:45;5738:2;5727:9;5723:18;5715:6;5697:45;:::i;:::-;5689:53;;5778:6;5773:2;5762:9;5758:18;5751:34;5500:291;;;;;:::o;5796:317::-;5973:2;5962:9;5955:21;5936:4;5993:45;6034:2;6023:9;6019:18;6011:6;5993:45;:::i;:::-;5985:53;;6103:1;6099;6094:3;6090:11;6086:19;6078:6;6074:32;6069:2;6058:9;6054:18;6047:60;5796:317;;;;;:::o;6118:362::-;6323:2;6312:9;6305:21;6286:4;6343:45;6384:2;6373:9;6369:18;6361:6;6343:45;:::i;:::-;6419:2;6404:18;;6397:34;;;;-1:-1:-1;6462:2:2;6447:18;6440:34;6335:53;6118:362;-1:-1:-1;6118:362:2:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "notice": "Create a new ballot to choose one of `proposalNames`."
      },
      "delegate(address)": {
        "notice": "Delegate your vote to the voter `to`."
      },
      "vote(uint256)": {
        "notice": "Give your vote (including votes delegated to you) to proposal `proposals[proposal].name`."
      },
      "winningProposal()": {
        "details": "Computes the winning proposal taking all previous votes into account."
      }
    },
    "title": "Voting with delegation.",
    "version": 1
  },
  "offset": [
    120,
    5972
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C19A95C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9F46AD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x6F1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x260 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x28F JUMPI PUSH2 0x28F PUSH2 0x8EA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x43D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 SUB PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 GT ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND MUL OR DUP3 OR SWAP1 SSTORE DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4D9 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4AE JUMPI PUSH2 0x4AE PUSH2 0x8EA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4F3 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4ED SWAP1 DUP5 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5D4 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x51B JUMPI PUSH2 0x51B PUSH2 0x8EA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x597 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70726F706F73616C735B25645D2E766F7465436F756E743D0000000000000000 DUP2 MSTORE POP DUP3 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x580 PUSH2 0x8EA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x83D JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5AA JUMPI PUSH2 0x5AA PUSH2 0x8EA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x5CC DUP2 PUSH2 0x92E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FD JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6FD PUSH2 0x4F8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0x8EA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x767 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x104C13EB PUSH1 0xE2 SHL OR SWAP1 MSTORE PUSH2 0x880 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7AF DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x780 SWAP3 SWAP2 SWAP1 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x9710A9D PUSH1 0xE4 SHL OR SWAP1 MSTORE PUSH2 0x880 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x767 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x7C9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x27B7CF85 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x880 JUMP JUMPDEST PUSH2 0x7AF DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x80E SWAP3 SWAP2 SWAP1 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x319AF333 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x880 JUMP JUMPDEST PUSH2 0x4F3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x855 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x969CDD03 PUSH1 0xE0 SHL OR SWAP1 MSTORE JUMPDEST DUP1 MLOAD PUSH11 0x636F6E736F6C652E6C6F67 PUSH1 0x20 DUP4 ADD PUSH1 0x0 DUP1 DUP5 DUP4 DUP6 GAS STATICCALL POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x900 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x900 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x951 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9BA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9DC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA06 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH10 0xCA0FD34FB2A80A26EEA1 PUSH24 0x33FCE81FF78D9F9927B093359D173CAEC204F164736F6C63 NUMBER STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C19A95C"
    },
    "38": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C19A95C"
    },
    "49": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "53": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x609FF1BD"
    },
    "60": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "64": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E7B8D61"
    },
    "71": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "75": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA3EC138D"
    },
    "82": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "86": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2BA53F0"
    },
    "93": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "97": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x121B93F"
    },
    "109": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13CF08B"
    },
    "120": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "124": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9F46AD"
    },
    "131": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "135": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E4176CF"
    },
    "142": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "146": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        120,
        5972
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "156": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "159": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "160": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "162": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A1"
    },
    "165": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "166": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "167": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "170": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "171": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "STOP",
      "path": "0"
    },
    "173": {
      "offset": [
        940,
        967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "177": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "180": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "181": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "183": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A1"
    },
    "186": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        940,
        967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "187": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "191": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        940,
        967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "196": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "op": "SWAP3"
    },
    "198": {
      "op": "DUP4"
    },
    "199": {
      "op": "MSTORE"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "202": {
      "op": "DUP4"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "op": "SWAP2"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "SWAP2"
    },
    "207": {
      "op": "MSTORE"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "offset": [
        940,
        967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "212": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "213": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "215": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SUB",
      "path": "0"
    },
    "216": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "217": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "RETURN",
      "path": "0"
    },
    "218": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5871,
        5969
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5946,
        5955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "221": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5946,
        5962
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "222": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5871,
        5969
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5871,
        5969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "225": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5871,
        5969
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "226": {
      "op": "SWAP1"
    },
    "227": {
      "op": "DUP2"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "231": {
      "op": "ADD"
    },
    "232": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5871,
        5969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "235": {
      "op": "JUMP"
    },
    "236": {
      "offset": [
        704,
        730
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "239": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "240": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "243": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "250": {
      "op": "SHL"
    },
    "251": {
      "op": "SUB"
    },
    "252": {
      "offset": [
        704,
        730
      ],
      "op": "AND",
      "path": "0"
    },
    "253": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "DUP2",
      "path": "0"
    },
    "254": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "258": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        704,
        730
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "265": {
      "op": "SHL"
    },
    "266": {
      "op": "SUB"
    },
    "267": {
      "op": "SWAP1"
    },
    "268": {
      "op": "SWAP2"
    },
    "269": {
      "op": "AND"
    },
    "270": {
      "op": "DUP2"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "offset": [
        704,
        730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "278": {
      "op": "JUMP"
    },
    "279": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "283": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125"
    },
    "286": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "287": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "289": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BA"
    },
    "292": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        2834,
        4380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "293": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "294": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E6"
    },
    "297": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        2834,
        4380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5052,
        5572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5052,
        5572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "302": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5052,
        5572
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "305": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5052,
        5572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "310": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "313": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "314": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "316": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BA"
    },
    "319": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        1973,
        2782
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D9"
    },
    "324": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        1973,
        2782
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "offset": [
        838,
        877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "329": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "332": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "333": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "335": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BA"
    },
    "338": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        838,
        877
      ],
      "op": "JUMP",
      "path": "0"
    },
    "339": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "342": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "344": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "345": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "346": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "347": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "349": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "350": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "351": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "352": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "354": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "355": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "356": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "357": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DUP1",
      "path": "0"
    },
    "358": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "359": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "360": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "361": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "ADD",
      "path": "0"
    },
    "362": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "363": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "365": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "367": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "ADD",
      "path": "0"
    },
    "368": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "369": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "371": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "372": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "AND",
      "path": "0"
    },
    "373": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "374": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "377": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "378": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DIV",
      "path": "0"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "385": {
      "op": "SHL"
    },
    "386": {
      "op": "SUB"
    },
    "387": {
      "offset": [
        838,
        877
      ],
      "op": "AND",
      "path": "0"
    },
    "388": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "389": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "DUP5",
      "path": "0"
    },
    "390": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "394": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "395": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "398": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "399": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "400": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "401": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "402": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        838,
        877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "403": {
      "op": "SWAP4"
    },
    "404": {
      "op": "DUP5"
    },
    "405": {
      "op": "MSTORE"
    },
    "406": {
      "op": "SWAP2"
    },
    "407": {
      "op": "ISZERO"
    },
    "408": {
      "op": "ISZERO"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "DUP5"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "op": "AND"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "425": {
      "op": "DUP4"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "MSTORE"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "430": {
      "op": "DUP3"
    },
    "431": {
      "op": "ADD"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "SWAP1"
    },
    "437": {
      "op": "JUMP"
    },
    "438": {
      "fn": "Ballot.winnerName",
      "offset": [
        5736,
        5866
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "fn": "Ballot.winnerName",
      "offset": [
        5736,
        5866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "442": {
      "fn": "Ballot.winnerName",
      "offset": [
        5736,
        5866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F1"
    },
    "445": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        5736,
        5866
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "Ballot.vote",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "Ballot.vote",
      "offset": [
        4573,
        4583
      ],
      "op": "CALLER",
      "path": "0"
    },
    "448": {
      "fn": "Ballot.vote",
      "offset": [
        4543,
        4563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "450": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "451": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "452": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "453": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "455": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "457": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "458": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "460": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "461": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "462": {
      "fn": "Ballot.vote",
      "offset": [
        4602,
        4615
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "463": {
      "fn": "Ballot.vote",
      "offset": [
        4602,
        4615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "464": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "465": {
      "fn": "Ballot.vote",
      "offset": [
        4566,
        4584
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "466": {
      "branch": 29,
      "fn": "Ballot.vote",
      "offset": [
        4602,
        4620
      ],
      "op": "SUB",
      "path": "0"
    },
    "467": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A"
    },
    "470": {
      "branch": 29,
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "471": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "473": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "482": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "485": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "487": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "DUP3",
      "path": "0"
    },
    "488": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "ADD",
      "path": "0"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH20",
      "value": "0x486173206E6F20726967687420746F20766F7465"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "ADD"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "532": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "533": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "535": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "SUB",
      "path": "0"
    },
    "536": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "537": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "538": {
      "fn": "Ballot.vote",
      "offset": [
        4594,
        4645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "539": {
      "fn": "Ballot.vote",
      "offset": [
        4664,
        4676
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "541": {
      "fn": "Ballot.vote",
      "offset": [
        4664,
        4676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "542": {
      "fn": "Ballot.vote",
      "offset": [
        4664,
        4676
      ],
      "op": "ADD",
      "path": "0"
    },
    "543": {
      "fn": "Ballot.vote",
      "offset": [
        4664,
        4676
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "544": {
      "fn": "Ballot.vote",
      "offset": [
        4664,
        4676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "546": {
      "fn": "Ballot.vote",
      "offset": [
        4664,
        4676
      ],
      "op": "AND",
      "path": "0"
    },
    "547": {
      "branch": 30,
      "fn": "Ballot.vote",
      "offset": [
        4663,
        4676
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "548": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "551": {
      "branch": 30,
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "552": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "554": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "563": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "566": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "568": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "569": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "ADD",
      "path": "0"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "575": {
      "op": "DUP3"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "PUSH14",
      "value": "0x20B63932B0B23C903B37BA32B217"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "598": {
      "op": "DUP3"
    },
    "599": {
      "op": "ADD"
    },
    "600": {
      "op": "MSTORE"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "603": {
      "op": "ADD"
    },
    "604": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "607": {
      "op": "JUMP"
    },
    "608": {
      "fn": "Ballot.vote",
      "offset": [
        4655,
        4695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "Ballot.vote",
      "offset": [
        4720,
        4724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "611": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "612": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "613": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4717
      ],
      "op": "ADD",
      "path": "0"
    },
    "614": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "DUP1",
      "path": "0"
    },
    "615": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "618": {
      "op": "NOT"
    },
    "619": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "AND",
      "path": "0"
    },
    "620": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "622": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "OR",
      "path": "0"
    },
    "623": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "624": {
      "fn": "Ballot.vote",
      "offset": [
        4705,
        4724
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "625": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4745
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x2"
    },
    "627": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "628": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "629": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4745
      ],
      "op": "ADD",
      "path": "0"
    },
    "630": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4756
      ],
      "op": "DUP4",
      "path": "0"
    },
    "631": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4756
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "632": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4756
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "633": {
      "fn": "Ballot.vote",
      "offset": [
        4935,
        4948
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "634": {
      "fn": "Ballot.vote",
      "offset": [
        4935,
        4948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "635": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "637": {
      "fn": "Ballot.vote",
      "offset": [
        4935,
        4948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "638": {
      "fn": "Ballot.vote",
      "offset": [
        4935,
        4948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "639": {
      "fn": "Ballot.vote",
      "offset": [
        4734,
        4745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "Ballot.vote",
      "offset": [
        4748,
        4756
      ],
      "op": "DUP5",
      "path": "0"
    },
    "641": {
      "fn": "Ballot.vote",
      "offset": [
        4748,
        4756
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "642": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "643": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "LT",
      "path": "0"
    },
    "644": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "647": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "648": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "651": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "654": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4902,
        4921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "655": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "656": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "657": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "659": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "660": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "662": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "664": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "665": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "666": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "668": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "MUL",
      "path": "0"
    },
    "669": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4921
      ],
      "op": "ADD",
      "path": "0"
    },
    "670": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "672": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4931
      ],
      "op": "ADD",
      "path": "0"
    },
    "673": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "675": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "676": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "DUP3",
      "path": "0"
    },
    "677": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "678": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "681": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "683": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x916"
    },
    "686": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4902,
        4948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "687": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "688": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "690": {
      "fn": "Ballot.vote",
      "offset": [
        4902,
        4948
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        4492,
        4955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "offset": [
        940,
        967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "699": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "700": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "701": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "702": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "LT",
      "path": "0"
    },
    "704": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "707": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "708": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "710": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "REVERT",
      "path": "0"
    },
    "712": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "715": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "716": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "717": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "718": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "720": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "722": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "723": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "725": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "727": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "MUL",
      "path": "0"
    },
    "728": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "ADD",
      "path": "0"
    },
    "729": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "DUP1",
      "path": "0"
    },
    "730": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "731": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "733": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "734": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "735": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "ADD",
      "path": "0"
    },
    "736": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "737": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "Ballot.vote",
      "offset": [
        940,
        967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "739": {
      "op": "POP"
    },
    "740": {
      "offset": [
        940,
        967
      ],
      "op": "DUP3",
      "path": "0"
    },
    "741": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        940,
        967
      ],
      "op": "JUMP",
      "path": "0"
    },
    "742": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "743": {
      "fn": "Ballot.delegate",
      "offset": [
        2942,
        2952
      ],
      "op": "CALLER",
      "path": "0"
    },
    "744": {
      "fn": "Ballot.delegate",
      "offset": [
        2912,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "746": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "748": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "749": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "751": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "753": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "754": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "755": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "756": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "758": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "759": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "760": {
      "fn": "Ballot.delegate",
      "offset": [
        2935,
        2953
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "761": {
      "fn": "Ballot.delegate",
      "offset": [
        2972,
        2984
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 6
    },
    "762": {
      "fn": "Ballot.delegate",
      "offset": [
        2972,
        2984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "Ballot.delegate",
      "offset": [
        2972,
        2984
      ],
      "op": "ADD",
      "path": "0"
    },
    "764": {
      "fn": "Ballot.delegate",
      "offset": [
        2972,
        2984
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "765": {
      "fn": "Ballot.delegate",
      "offset": [
        2972,
        2984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "767": {
      "fn": "Ballot.delegate",
      "offset": [
        2972,
        2984
      ],
      "op": "AND",
      "path": "0"
    },
    "768": {
      "branch": 31,
      "fn": "Ballot.delegate",
      "offset": [
        2971,
        2984
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "769": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "772": {
      "branch": 31,
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "773": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "775": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "DUP2",
      "path": "0"
    },
    "784": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "787": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "789": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "790": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "ADD",
      "path": "0"
    },
    "791": {
      "op": "MSTORE"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "796": {
      "op": "DUP3"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH18",
      "value": "0x2CB7BA9030B63932B0B23C903B37BA32B217"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "823": {
      "op": "DUP3"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "832": {
      "op": "JUMP"
    },
    "833": {
      "fn": "Ballot.delegate",
      "offset": [
        2963,
        3007
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "fn": "Ballot.delegate",
      "offset": [
        3032,
        3042
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "Ballot.delegate",
      "offset": [
        3026,
        3042
      ],
      "op": "DUP4",
      "path": "0"
    },
    "844": {
      "fn": "Ballot.delegate",
      "offset": [
        3026,
        3042
      ],
      "op": "AND",
      "path": "0"
    },
    "845": {
      "branch": 32,
      "fn": "Ballot.delegate",
      "offset": [
        3026,
        3042
      ],
      "op": "SUB",
      "path": "0"
    },
    "846": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "849": {
      "branch": 32,
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "850": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "852": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "DUP2",
      "path": "0"
    },
    "861": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "864": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "866": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "DUP3",
      "path": "0"
    },
    "867": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "ADD",
      "path": "0"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "873": {
      "op": "DUP3"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH32",
      "value": "0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "920": {
      "op": "JUMP"
    },
    "921": {
      "fn": "Ballot.delegate",
      "offset": [
        3018,
        3077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "SUB"
    },
    "930": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "DUP3",
      "path": "0"
    },
    "931": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "932": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "AND",
      "path": "0"
    },
    "933": {
      "fn": "Ballot.delegate",
      "offset": [
        3534,
        3535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "935": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "937": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "938": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "940": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "942": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "943": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "944": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "945": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "947": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "948": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "949": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3513
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "950": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3522
      ],
      "op": "ADD",
      "path": "0"
    },
    "951": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3522
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "952": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "955": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "956": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3522
      ],
      "op": "DIV",
      "path": "0"
    },
    "957": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3522
      ],
      "op": "AND",
      "path": "0"
    },
    "958": {
      "fn": "Ballot.delegate",
      "offset": [
        3503,
        3536
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "959": {
      "fn": "Ballot.delegate",
      "offset": [
        3496,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43D"
    },
    "962": {
      "fn": "Ballot.delegate",
      "offset": [
        3496,
        3719
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "op": "SUB"
    },
    "971": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 8
    },
    "972": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "DUP3",
      "path": "0"
    },
    "973": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "AND",
      "path": "0"
    },
    "974": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "976": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "977": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "978": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "979": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "981": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "983": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "DUP2",
      "path": "0"
    },
    "984": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "985": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "986": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "988": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "990": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3567
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "991": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "ADD",
      "path": "0"
    },
    "992": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "993": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "996": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "DIV",
      "path": "0"
    },
    "998": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1000": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "AND",
      "path": "0"
    },
    "1001": {
      "fn": "Ballot.delegate",
      "offset": [
        3557,
        3576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "Ballot.delegate",
      "offset": [
        3668,
        3678
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "1003": {
      "fn": "Ballot.delegate",
      "offset": [
        3662,
        3678
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1004": {
      "branch": 33,
      "fn": "Ballot.delegate",
      "offset": [
        3662,
        3678
      ],
      "op": "SUB",
      "path": "0"
    },
    "1005": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "1008": {
      "branch": 33,
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1009": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1011": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1023": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1025": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1026": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "ADD",
      "path": "0"
    },
    "1027": {
      "op": "MSTORE"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1032": {
      "op": "DUP3"
    },
    "1033": {
      "op": "ADD"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH32",
      "value": "0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1070": {
      "op": "DUP3"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1079": {
      "op": "JUMP"
    },
    "1080": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1081": {
      "fn": "Ballot.delegate",
      "offset": [
        3496,
        3719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "1084": {
      "fn": "Ballot.delegate",
      "offset": [
        3496,
        3719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1085": {
      "fn": "Ballot.delegate",
      "offset": [
        3496,
        3719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1095": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "AND",
      "path": "0"
    },
    "1096": {
      "fn": "Ballot.delegate",
      "offset": [
        3823,
        3846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1098": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1100": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1101": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1103": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1105": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1106": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1108": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1110": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1111": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1112": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1113": {
      "fn": "Ballot.delegate",
      "offset": [
        3941,
        3957
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 10
    },
    "1114": {
      "fn": "Ballot.delegate",
      "offset": [
        3941,
        3957
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1115": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1116": {
      "fn": "Ballot.delegate",
      "offset": [
        3849,
        3859
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1117": {
      "op": "GT"
    },
    "1118": {
      "branch": 34,
      "fn": "Ballot.delegate",
      "offset": [
        3941,
        3962
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1119": {
      "fn": "Ballot.delegate",
      "offset": [
        3933,
        3963
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x467"
    },
    "1122": {
      "branch": 34,
      "fn": "Ballot.delegate",
      "offset": [
        3933,
        3963
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1123": {
      "fn": "Ballot.delegate",
      "offset": [
        3933,
        3963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1125": {
      "fn": "Ballot.delegate",
      "offset": [
        3933,
        3963
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1126": {
      "fn": "Ballot.delegate",
      "offset": [
        3933,
        3963
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1127": {
      "fn": "Ballot.delegate",
      "offset": [
        3933,
        3963
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1128": {
      "fn": "Ballot.delegate",
      "offset": [
        3988,
        3992
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1130": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3985
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1131": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3985
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1132": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3985
      ],
      "op": "ADD",
      "path": "0"
    },
    "1133": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3992
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1134": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3992
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "SUB"
    },
    "1143": {
      "op": "NOT"
    },
    "1144": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "AND",
      "path": "0",
      "statement": 12
    },
    "1145": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3992
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1157": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "AND",
      "path": "0"
    },
    "1158": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "MUL",
      "path": "0"
    },
    "1159": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "OR",
      "path": "0"
    },
    "1160": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1161": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "OR",
      "path": "0"
    },
    "1162": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1163": {
      "fn": "Ballot.delegate",
      "offset": [
        4002,
        4022
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1164": {
      "fn": "Ballot.delegate",
      "offset": [
        4036,
        4051
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1165": {
      "fn": "Ballot.delegate",
      "offset": [
        4036,
        4051
      ],
      "op": "ADD",
      "path": "0"
    },
    "1166": {
      "fn": "Ballot.delegate",
      "offset": [
        4036,
        4051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1167": {
      "fn": "Ballot.delegate",
      "offset": [
        3973,
        3992
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1169": {
      "branch": 35,
      "fn": "Ballot.delegate",
      "offset": [
        4036,
        4051
      ],
      "op": "AND",
      "path": "0"
    },
    "1170": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1171": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D9"
    },
    "1174": {
      "branch": 35,
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1175": {
      "fn": "Ballot.delegate",
      "offset": [
        4203,
        4216
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "1176": {
      "fn": "Ballot.delegate",
      "offset": [
        4203,
        4216
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1177": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1179": {
      "fn": "Ballot.delegate",
      "offset": [
        4174,
        4188
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1180": {
      "fn": "Ballot.delegate",
      "offset": [
        4174,
        4188
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1181": {
      "fn": "Ballot.delegate",
      "offset": [
        4174,
        4188
      ],
      "op": "ADD",
      "path": "0"
    },
    "1182": {
      "fn": "Ballot.delegate",
      "offset": [
        4174,
        4188
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1183": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1184": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1185": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1186": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "LT",
      "path": "0"
    },
    "1187": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1190": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1191": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AE"
    },
    "1194": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "1197": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        4164,
        4189
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1198": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1199": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1200": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1202": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1203": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1205": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1207": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1208": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1209": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1211": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "MUL",
      "path": "0"
    },
    "1212": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4189
      ],
      "op": "ADD",
      "path": "0"
    },
    "1213": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1215": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4199
      ],
      "op": "ADD",
      "path": "0"
    },
    "1216": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1218": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1219": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1220": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1221": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CE"
    },
    "1224": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1225": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1226": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x916"
    },
    "1229": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        4164,
        4216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1230": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1231": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1232": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1233": {
      "fn": "Ballot.delegate",
      "offset": [
        4164,
        4216
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F3"
    },
    "1238": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1241": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1242": {
      "fn": "Ballot.delegate",
      "offset": [
        4350,
        4363
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "1243": {
      "fn": "Ballot.delegate",
      "offset": [
        4350,
        4363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1244": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1245": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1246": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1247": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "Ballot.delegate",
      "offset": [
        4350,
        4363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1250": {
      "fn": "Ballot.delegate",
      "offset": [
        4350,
        4363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "1254": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1255": {
      "fn": "Ballot.delegate",
      "offset": [
        4350,
        4363
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1256": {
      "fn": "Ballot.delegate",
      "offset": [
        4350,
        4363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1257": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x916"
    },
    "1260": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        4330,
        4363
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1261": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1262": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1264": {
      "fn": "Ballot.delegate",
      "offset": [
        4330,
        4363
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1265": {
      "op": "POP"
    },
    "1266": {
      "op": "POP"
    },
    "1267": {
      "fn": "Ballot.delegate",
      "offset": [
        4032,
        4374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1268": {
      "fn": "Ballot.delegate",
      "offset": [
        2873,
        4380
      ],
      "op": "POP",
      "path": "0"
    },
    "1269": {
      "fn": "Ballot.delegate",
      "offset": [
        2873,
        4380
      ],
      "op": "POP",
      "path": "0"
    },
    "1270": {
      "fn": "Ballot.delegate",
      "offset": [
        2834,
        4380
      ],
      "op": "POP",
      "path": "0"
    },
    "1271": {
      "fn": "Ballot.delegate",
      "jump": "o",
      "offset": [
        2834,
        4380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1272": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5052,
        5572
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1273": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5100,
        5124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1275": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5100,
        5124
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1276": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5100,
        5124
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1277": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1278": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5198,
        5207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1280": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5198,
        5214
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1281": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5194,
        5214
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1282": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5194,
        5214
      ],
      "op": "LT",
      "path": "0"
    },
    "1283": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1284": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "1287": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1288": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5264,
        5280
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1289": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1291": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5249,
        5250
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1292": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1293": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1294": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1295": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "LT",
      "path": "0"
    },
    "1296": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "1299": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1300": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "1303": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "1306": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5239,
        5251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1307": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1311": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1312": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1314": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1316": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1317": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1320": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "MUL",
      "path": "0"
    },
    "1321": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5251
      ],
      "op": "ADD",
      "path": "0"
    },
    "1322": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5261
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1324": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5261
      ],
      "op": "ADD",
      "path": "0"
    },
    "1325": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5261
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1326": {
      "branch": 36,
      "fn": "Ballot.winningProposal",
      "offset": [
        5239,
        5280
      ],
      "op": "GT",
      "path": "0"
    },
    "1327": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5235,
        5556
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1328": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5235,
        5556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C2"
    },
    "1331": {
      "branch": 36,
      "fn": "Ballot.winningProposal",
      "offset": [
        5235,
        5556
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1332": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x597"
    },
    "1335": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1337": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1338": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1339": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1341": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "ADD",
      "path": "0"
    },
    "1342": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1344": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1345": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1346": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "1348": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1349": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1350": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1352": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "ADD",
      "path": "0"
    },
    "1353": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x70726F706F73616C735B25645D2E766F7465436F756E743D0000000000000000"
    },
    "1386": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1387": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1388": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "POP",
      "path": "0"
    },
    "1389": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5381,
        5382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1390": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1392": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5414,
        5415
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1393": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1394": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1395": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1396": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "LT",
      "path": "0"
    },
    "1397": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x580"
    },
    "1400": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1401": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x580"
    },
    "1404": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "1407": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5404,
        5416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1408": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1409": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1412": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1413": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1415": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1417": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1418": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1419": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1421": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "MUL",
      "path": "0"
    },
    "1422": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5416
      ],
      "op": "ADD",
      "path": "0"
    },
    "1423": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1425": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5426
      ],
      "op": "ADD",
      "path": "0"
    },
    "1426": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5404,
        5426
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1427": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83D"
    },
    "1430": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5300,
        5444
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1431": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5300,
        5444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1432": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5490
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x2"
    },
    "1434": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5491,
        5492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1435": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1436": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1437": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1438": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "LT",
      "path": "0"
    },
    "1439": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AA"
    },
    "1442": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1443": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AA"
    },
    "1446": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "1449": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5481,
        5493
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1450": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1451": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1452": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1454": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1455": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1457": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1459": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1460": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1461": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1463": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "MUL",
      "path": "0"
    },
    "1464": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5493
      ],
      "op": "ADD",
      "path": "0"
    },
    "1465": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1467": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5503
      ],
      "op": "ADD",
      "path": "0"
    },
    "1468": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5481,
        5503
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1469": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5462,
        5503
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1470": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5462,
        5503
      ],
      "op": "POP",
      "path": "0"
    },
    "1471": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5540,
        5541
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "1472": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5521,
        5541
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1473": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5521,
        5541
      ],
      "op": "POP",
      "path": "0"
    },
    "1474": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5235,
        5556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1475": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 18
    },
    "1476": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CC"
    },
    "1479": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1480": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92E"
    },
    "1483": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5216,
        5219
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1484": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1485": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1486": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "POP",
      "path": "0"
    },
    "1487": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5216,
        5219
      ],
      "op": "POP",
      "path": "0"
    },
    "1488": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FD"
    },
    "1491": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1492": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1493": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5174,
        5566
      ],
      "op": "POP",
      "path": "0"
    },
    "1494": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5126,
        5572
      ],
      "op": "POP",
      "path": "0"
    },
    "1495": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5052,
        5572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1496": {
      "fn": "Ballot.winningProposal",
      "jump": "o",
      "offset": [
        5052,
        5572
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1497": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1973,
        2782
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1498": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2553,
        2564
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x0"
    },
    "1500": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2553,
        2564
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2553,
        2564
      ],
      "op": "AND",
      "path": "0"
    },
    "1510": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2539,
        2549
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1511": {
      "branch": 37,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2539,
        2564
      ],
      "op": "EQ",
      "path": "0"
    },
    "1512": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x644"
    },
    "1515": {
      "branch": 37,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1516": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1518": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1527": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1530": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1532": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1533": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "ADD",
      "path": "0"
    },
    "1534": {
      "op": "MSTORE"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1539": {
      "op": "DUP3"
    },
    "1540": {
      "op": "ADD"
    },
    "1541": {
      "op": "MSTORE"
    },
    "1542": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1577": {
      "op": "DUP3"
    },
    "1578": {
      "op": "ADD"
    },
    "1579": {
      "op": "MSTORE"
    },
    "1580": {
      "op": "PUSH8",
      "value": "0x3A37903B37BA3297"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1594": {
      "op": "DUP3"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "op": "MSTORE"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1603": {
      "op": "JUMP"
    },
    "1604": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2518,
        2630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "op": "SUB"
    },
    "1613": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 20
    },
    "1614": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "AND",
      "path": "0"
    },
    "1615": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1617": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1618": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1619": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1620": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1622": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1624": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1626": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1627": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1629": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1630": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1631": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1632": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2668
      ],
      "op": "ADD",
      "path": "0"
    },
    "1633": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2668
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1634": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1636": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2649,
        2668
      ],
      "op": "AND",
      "path": "0"
    },
    "1637": {
      "branch": 38,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2648,
        2668
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1638": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "1641": {
      "branch": 38,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1642": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1644": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1653": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1656": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1658": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1659": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "ADD",
      "path": "0"
    },
    "1660": {
      "op": "MSTORE"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1665": {
      "op": "DUP3"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "MSTORE"
    },
    "1668": {
      "op": "PUSH32",
      "value": "0x54686520766F74657220616C726561647920766F7465642E0000000000000000"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "MSTORE"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1712": {
      "op": "JUMP"
    },
    "1713": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2640,
        2697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 21
    },
    "1723": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "AND",
      "path": "0"
    },
    "1724": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1726": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1727": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1728": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1729": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1731": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1733": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1734": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1736": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2728
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1738": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1739": {
      "branch": 39,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2715,
        2740
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1740": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2707,
        2741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D4"
    },
    "1743": {
      "branch": 39,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2707,
        2741
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1744": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2707,
        2741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1746": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2707,
        2741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2707,
        2741
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1748": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2707,
        2741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "AND",
      "path": "0",
      "statement": 22
    },
    "1758": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1760": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1761": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1763": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2774,
        2775
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1765": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1767": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1768": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1769": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1770": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1772": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1773": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1774": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2764
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1775": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2751,
        2775
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1776": {
      "fn": "Ballot.giveRightToVote",
      "jump": "o",
      "offset": [
        1973,
        2782
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1777": {
      "fn": "Ballot.winnerName",
      "offset": [
        5736,
        5866
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1778": {
      "fn": "Ballot.winnerName",
      "offset": [
        5781,
        5800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1780": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5835
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x2"
    },
    "1782": {
      "fn": "Ballot.winnerName",
      "offset": [
        5836,
        5853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FD"
    },
    "1785": {
      "fn": "Ballot.winnerName",
      "offset": [
        5836,
        5851
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "1788": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        5836,
        5853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1789": {
      "fn": "Ballot.winnerName",
      "offset": [
        5836,
        5853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1790": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1791": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1792": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1793": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "LT",
      "path": "0"
    },
    "1794": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70D"
    },
    "1797": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1798": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70D"
    },
    "1801": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "1804": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        5826,
        5854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1805": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1806": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1807": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1809": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1810": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1812": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1814": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1815": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1818": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "MUL",
      "path": "0"
    },
    "1819": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5854
      ],
      "op": "ADD",
      "path": "0"
    },
    "1820": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1822": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5859
      ],
      "op": "ADD",
      "path": "0"
    },
    "1823": {
      "fn": "Ballot.winnerName",
      "offset": [
        5826,
        5859
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1824": {
      "fn": "Ballot.winnerName",
      "offset": [
        5812,
        5859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1825": {
      "fn": "Ballot.winnerName",
      "offset": [
        5812,
        5859
      ],
      "op": "POP",
      "path": "0"
    },
    "1826": {
      "fn": "Ballot.winnerName",
      "offset": [
        5736,
        5866
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1827": {
      "fn": "Ballot.winnerName",
      "jump": "o",
      "offset": [
        5736,
        5866
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1828": {
      "fn": "console.log",
      "offset": [
        5053,
        5165
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1829": {
      "fn": "console.log",
      "offset": [
        5102,
        5161
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 24,
      "value": "0x767"
    },
    "1832": {
      "fn": "console.log",
      "offset": [
        5157,
        5159
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1833": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1835": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1836": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1838": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1839": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x738"
    },
    "1842": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1843": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1844": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x994"
    },
    "1847": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1848": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1849": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1851": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1852": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1855": {
      "op": "NOT"
    },
    "1856": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1857": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1858": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SUB",
      "path": "1"
    },
    "1859": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1860": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1861": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1862": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1863": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1864": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1865": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1867": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1868": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1869": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1870": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "AND",
      "path": "1"
    },
    "1880": {
      "op": "PUSH4",
      "value": "0x104C13EB"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "OR",
      "path": "1"
    },
    "1889": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1890": {
      "fn": "console.log",
      "offset": [
        5118,
        5160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1891": {
      "fn": "console.log",
      "offset": [
        5102,
        5117
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x880"
    },
    "1894": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5102,
        5161
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1895": {
      "fn": "console.log",
      "offset": [
        5102,
        5161
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1896": {
      "fn": "console.log",
      "offset": [
        5053,
        5165
      ],
      "op": "POP",
      "path": "1"
    },
    "1897": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        5053,
        5165
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1898": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1899": {
      "fn": "console.log",
      "offset": [
        5945,
        6013
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x7AF"
    },
    "1902": {
      "fn": "console.log",
      "offset": [
        6005,
        6007
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1903": {
      "fn": "console.log",
      "offset": [
        6009,
        6011
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1904": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1906": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1907": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1909": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "1"
    },
    "1910": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x780"
    },
    "1913": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1914": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1915": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1916": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A7"
    },
    "1919": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5961,
        6012
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1920": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1921": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1923": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1924": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1927": {
      "op": "NOT"
    },
    "1928": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1929": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1930": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SUB",
      "path": "1"
    },
    "1931": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "1"
    },
    "1932": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1933": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1934": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1935": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1936": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1937": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1939": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1940": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "ADD",
      "path": "1"
    },
    "1941": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1942": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "op": "SUB"
    },
    "1951": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "AND",
      "path": "1"
    },
    "1952": {
      "op": "PUSH4",
      "value": "0x9710A9D"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "OR",
      "path": "1"
    },
    "1961": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1962": {
      "fn": "console.log",
      "offset": [
        5961,
        6012
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1963": {
      "fn": "console.log",
      "offset": [
        5945,
        5960
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x880"
    },
    "1966": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        5945,
        6013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1967": {
      "fn": "console.log",
      "offset": [
        5945,
        6013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1968": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "POP",
      "path": "1"
    },
    "1969": {
      "fn": "console.log",
      "offset": [
        5887,
        6017
      ],
      "op": "POP",
      "path": "1"
    },
    "1970": {
      "fn": "console.log",
      "jump": "o",
      "offset": [
        5887,
        6017
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1971": {
      "fn": "console.logBytes32",
      "offset": [
        4832,
        4946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1972": {
      "fn": "console.logBytes32",
      "offset": [
        4882,
        4942
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0x767"
    },
    "1975": {
      "fn": "console.logBytes32",
      "offset": [
        4938,
        4940
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1976": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1978": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1979": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1981": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "ADD",
      "path": "1"
    },
    "1982": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C9"
    },
    "1985": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1986": {
      "op": "DUP2"
    },
    "1987": {
      "op": "MSTORE"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1990": {
      "op": "ADD"
    },
    "1991": {
      "op": "SWAP1"
    },
    "1992": {
      "op": "JUMP"
    },
    "1993": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1994": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1996": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1997": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2000": {
      "op": "NOT"
    },
    "2001": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2002": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2003": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SUB",
      "path": "1"
    },
    "2004": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "ADD",
      "path": "1"
    },
    "2005": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2006": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2007": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2008": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2009": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2010": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2012": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2013": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "ADD",
      "path": "1"
    },
    "2014": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2015": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2022": {
      "op": "SHL"
    },
    "2023": {
      "op": "SUB"
    },
    "2024": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "AND",
      "path": "1"
    },
    "2025": {
      "op": "PUSH4",
      "value": "0x27B7CF85"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "OR",
      "path": "1"
    },
    "2034": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2035": {
      "fn": "console.logBytes32",
      "offset": [
        4898,
        4941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2036": {
      "fn": "console.logBytes32",
      "offset": [
        4882,
        4897
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x880"
    },
    "2039": {
      "fn": "console.logBytes32",
      "jump": "i",
      "offset": [
        4882,
        4942
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2040": {
      "fn": "console.log",
      "offset": [
        6297,
        6433
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2041": {
      "fn": "console.log",
      "offset": [
        6358,
        6429
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0x7AF"
    },
    "2044": {
      "fn": "console.log",
      "offset": [
        6421,
        6423
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2045": {
      "fn": "console.log",
      "offset": [
        6425,
        6427
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2046": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2048": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2049": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2051": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "2052": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80E"
    },
    "2055": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2056": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2057": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2058": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C9"
    },
    "2061": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2062": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2063": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2065": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2066": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2069": {
      "op": "NOT"
    },
    "2070": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2071": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2072": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SUB",
      "path": "1"
    },
    "2073": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "2074": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2075": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2076": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2077": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2078": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2079": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2081": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2082": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "ADD",
      "path": "1"
    },
    "2083": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2084": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "AND",
      "path": "1"
    },
    "2094": {
      "op": "PUSH4",
      "value": "0x319AF333"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2101": {
      "op": "SHL"
    },
    "2102": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "OR",
      "path": "1"
    },
    "2103": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2104": {
      "fn": "console.log",
      "offset": [
        6374,
        6428
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2105": {
      "fn": "console.log",
      "offset": [
        6358,
        6373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x880"
    },
    "2108": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        6358,
        6429
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2109": {
      "fn": "console.log",
      "offset": [
        9846,
        9994
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2110": {
      "fn": "console.log",
      "offset": [
        9913,
        9990
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 28,
      "value": "0x4F3"
    },
    "2113": {
      "fn": "console.log",
      "offset": [
        9978,
        9980
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2114": {
      "fn": "console.log",
      "offset": [
        9982,
        9984
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2115": {
      "fn": "console.log",
      "offset": [
        9986,
        9988
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2116": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2118": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2119": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2121": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "ADD",
      "path": "1"
    },
    "2122": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x855"
    },
    "2125": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2126": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2127": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2128": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2129": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F3"
    },
    "2132": {
      "fn": "console.log",
      "jump": "i",
      "offset": [
        9929,
        9989
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2133": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2134": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2136": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2137": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2140": {
      "op": "NOT"
    },
    "2141": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2142": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2143": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SUB",
      "path": "1"
    },
    "2144": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "ADD",
      "path": "1"
    },
    "2145": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2146": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2147": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2148": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2149": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2150": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2152": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2153": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "ADD",
      "path": "1"
    },
    "2154": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2155": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "op": "SUB"
    },
    "2164": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "AND",
      "path": "1"
    },
    "2165": {
      "op": "PUSH4",
      "value": "0x969CDD03"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2172": {
      "op": "SHL"
    },
    "2173": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "OR",
      "path": "1"
    },
    "2174": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2175": {
      "fn": "console.log",
      "offset": [
        9929,
        9989
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2176": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2177": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2178": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2179": {
      "offset": [
        128,
        170
      ],
      "op": "PUSH11",
      "path": "1",
      "value": "0x636F6E736F6C652E6C6F67"
    },
    "2191": {
      "fn": "console._sendLogPayload",
      "offset": [
        372,
        374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2193": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2194": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "ADD",
      "path": "1"
    },
    "2195": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2197": {
      "fn": "console._sendLogPayload",
      "offset": [
        239,
        260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2198": {
      "fn": "console._sendLogPayload",
      "offset": [
        263,
        277
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2199": {
      "fn": "console._sendLogPayload",
      "offset": [
        359,
        375
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2200": {
      "offset": [
        128,
        170
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2201": {
      "fn": "console._sendLogPayload",
      "offset": [
        399,
        404
      ],
      "op": "GAS",
      "path": "1"
    },
    "2202": {
      "fn": "console._sendLogPayload",
      "offset": [
        388,
        456
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2203": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "1"
    },
    "2204": {
      "fn": "console._sendLogPayload",
      "offset": [
        379,
        456
      ],
      "op": "POP",
      "path": "1"
    },
    "2205": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "1"
    },
    "2206": {
      "fn": "console._sendLogPayload",
      "offset": [
        334,
        460
      ],
      "op": "POP",
      "path": "1"
    },
    "2207": {
      "fn": "console._sendLogPayload",
      "offset": [
        175,
        463
      ],
      "op": "POP",
      "path": "1"
    },
    "2208": {
      "fn": "console._sendLogPayload",
      "jump": "o",
      "offset": [
        175,
        463
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2209": {
      "op": "JUMPDEST"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "DUP5"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "op": "SLT"
    },
    "2218": {
      "op": "ISZERO"
    },
    "2219": {
      "op": "PUSH2",
      "value": "0x8B3"
    },
    "2222": {
      "op": "JUMPI"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2225": {
      "op": "DUP1"
    },
    "2226": {
      "op": "REVERT"
    },
    "2227": {
      "op": "JUMPDEST"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "op": "CALLDATALOAD"
    },
    "2230": {
      "op": "SWAP2"
    },
    "2231": {
      "op": "SWAP1"
    },
    "2232": {
      "op": "POP"
    },
    "2233": {
      "jump": "o",
      "op": "JUMP"
    },
    "2234": {
      "op": "JUMPDEST"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2239": {
      "op": "DUP3"
    },
    "2240": {
      "op": "DUP5"
    },
    "2241": {
      "op": "SUB"
    },
    "2242": {
      "op": "SLT"
    },
    "2243": {
      "op": "ISZERO"
    },
    "2244": {
      "op": "PUSH2",
      "value": "0x8CC"
    },
    "2247": {
      "op": "JUMPI"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "op": "DUP1"
    },
    "2251": {
      "op": "REVERT"
    },
    "2252": {
      "op": "JUMPDEST"
    },
    "2253": {
      "op": "DUP2"
    },
    "2254": {
      "op": "CALLDATALOAD"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "op": "SUB"
    },
    "2263": {
      "op": "DUP2"
    },
    "2264": {
      "op": "AND"
    },
    "2265": {
      "op": "DUP2"
    },
    "2266": {
      "op": "EQ"
    },
    "2267": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "2270": {
      "op": "JUMPI"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2273": {
      "op": "DUP1"
    },
    "2274": {
      "op": "REVERT"
    },
    "2275": {
      "op": "JUMPDEST"
    },
    "2276": {
      "op": "SWAP4"
    },
    "2277": {
      "op": "SWAP3"
    },
    "2278": {
      "op": "POP"
    },
    "2279": {
      "op": "POP"
    },
    "2280": {
      "op": "POP"
    },
    "2281": {
      "jump": "o",
      "op": "JUMP"
    },
    "2282": {
      "op": "JUMPDEST"
    },
    "2283": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2290": {
      "op": "SHL"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2293": {
      "op": "MSTORE"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2303": {
      "op": "REVERT"
    },
    "2304": {
      "op": "JUMPDEST"
    },
    "2305": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2315": {
      "op": "MSTORE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2320": {
      "op": "MSTORE"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2325": {
      "op": "REVERT"
    },
    "2326": {
      "op": "JUMPDEST"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "NOT"
    },
    "2331": {
      "op": "DUP3"
    },
    "2332": {
      "op": "GT"
    },
    "2333": {
      "op": "ISZERO"
    },
    "2334": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2337": {
      "op": "JUMPI"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2341": {
      "op": "PUSH2",
      "value": "0x900"
    },
    "2344": {
      "jump": "i",
      "op": "JUMP"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "SWAP1"
    },
    "2349": {
      "jump": "o",
      "op": "JUMP"
    },
    "2350": {
      "op": "JUMPDEST"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "DUP3"
    },
    "2356": {
      "op": "ADD"
    },
    "2357": {
      "op": "PUSH2",
      "value": "0x940"
    },
    "2360": {
      "op": "JUMPI"
    },
    "2361": {
      "op": "PUSH2",
      "value": "0x940"
    },
    "2364": {
      "op": "PUSH2",
      "value": "0x900"
    },
    "2367": {
      "jump": "i",
      "op": "JUMP"
    },
    "2368": {
      "op": "JUMPDEST"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "ADD"
    },
    "2373": {
      "op": "SWAP1"
    },
    "2374": {
      "jump": "o",
      "op": "JUMP"
    },
    "2375": {
      "op": "JUMPDEST"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2378": {
      "op": "DUP2"
    },
    "2379": {
      "op": "MLOAD"
    },
    "2380": {
      "op": "DUP1"
    },
    "2381": {
      "op": "DUP5"
    },
    "2382": {
      "op": "MSTORE"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "DUP2"
    },
    "2387": {
      "op": "DUP2"
    },
    "2388": {
      "op": "LT"
    },
    "2389": {
      "op": "ISZERO"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x96D"
    },
    "2393": {
      "op": "JUMPI"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "op": "DUP2"
    },
    "2397": {
      "op": "DUP6"
    },
    "2398": {
      "op": "ADD"
    },
    "2399": {
      "op": "DUP2"
    },
    "2400": {
      "op": "ADD"
    },
    "2401": {
      "op": "MLOAD"
    },
    "2402": {
      "op": "DUP7"
    },
    "2403": {
      "op": "DUP4"
    },
    "2404": {
      "op": "ADD"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "ADD"
    },
    "2409": {
      "op": "PUSH2",
      "value": "0x951"
    },
    "2412": {
      "op": "JUMP"
    },
    "2413": {
      "op": "JUMPDEST"
    },
    "2414": {
      "op": "DUP2"
    },
    "2415": {
      "op": "DUP2"
    },
    "2416": {
      "op": "GT"
    },
    "2417": {
      "op": "ISZERO"
    },
    "2418": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "2421": {
      "op": "JUMPI"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2426": {
      "op": "DUP4"
    },
    "2427": {
      "op": "DUP8"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "JUMPDEST"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2435": {
      "op": "ADD"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2438": {
      "op": "NOT"
    },
    "2439": {
      "op": "AND"
    },
    "2440": {
      "op": "SWAP3"
    },
    "2441": {
      "op": "SWAP1"
    },
    "2442": {
      "op": "SWAP3"
    },
    "2443": {
      "op": "ADD"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "op": "SWAP3"
    },
    "2448": {
      "op": "SWAP2"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "jump": "o",
      "op": "JUMP"
    },
    "2452": {
      "op": "JUMPDEST"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2455": {
      "op": "DUP2"
    },
    "2456": {
      "op": "MSTORE"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2459": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2464": {
      "op": "DUP4"
    },
    "2465": {
      "op": "ADD"
    },
    "2466": {
      "op": "DUP5"
    },
    "2467": {
      "op": "PUSH2",
      "value": "0x947"
    },
    "2470": {
      "jump": "i",
      "op": "JUMP"
    },
    "2471": {
      "op": "JUMPDEST"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2474": {
      "op": "DUP2"
    },
    "2475": {
      "op": "MSTORE"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "PUSH2",
      "value": "0x9BA"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2483": {
      "op": "DUP4"
    },
    "2484": {
      "op": "ADD"
    },
    "2485": {
      "op": "DUP6"
    },
    "2486": {
      "op": "PUSH2",
      "value": "0x947"
    },
    "2489": {
      "jump": "i",
      "op": "JUMP"
    },
    "2490": {
      "op": "JUMPDEST"
    },
    "2491": {
      "op": "SWAP1"
    },
    "2492": {
      "op": "POP"
    },
    "2493": {
      "op": "DUP3"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2496": {
      "op": "DUP4"
    },
    "2497": {
      "op": "ADD"
    },
    "2498": {
      "op": "MSTORE"
    },
    "2499": {
      "op": "SWAP4"
    },
    "2500": {
      "op": "SWAP3"
    },
    "2501": {
      "op": "POP"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "op": "POP"
    },
    "2504": {
      "jump": "o",
      "op": "JUMP"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2508": {
      "op": "DUP2"
    },
    "2509": {
      "op": "MSTORE"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2512": {
      "op": "PUSH2",
      "value": "0x9DC"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2517": {
      "op": "DUP4"
    },
    "2518": {
      "op": "ADD"
    },
    "2519": {
      "op": "DUP6"
    },
    "2520": {
      "op": "PUSH2",
      "value": "0x947"
    },
    "2523": {
      "jump": "i",
      "op": "JUMP"
    },
    "2524": {
      "op": "JUMPDEST"
    },
    "2525": {
      "op": "SWAP1"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2529": {
      "op": "DUP1"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2532": {
      "op": "SHL"
    },
    "2533": {
      "op": "SUB"
    },
    "2534": {
      "op": "DUP4"
    },
    "2535": {
      "op": "AND"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "DUP4"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "op": "MSTORE"
    },
    "2541": {
      "op": "SWAP4"
    },
    "2542": {
      "op": "SWAP3"
    },
    "2543": {
      "op": "POP"
    },
    "2544": {
      "op": "POP"
    },
    "2545": {
      "op": "POP"
    },
    "2546": {
      "jump": "o",
      "op": "JUMP"
    },
    "2547": {
      "op": "JUMPDEST"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2550": {
      "op": "DUP2"
    },
    "2551": {
      "op": "MSTORE"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2554": {
      "op": "PUSH2",
      "value": "0xA06"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2559": {
      "op": "DUP4"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "DUP7"
    },
    "2562": {
      "op": "PUSH2",
      "value": "0x947"
    },
    "2565": {
      "jump": "i",
      "op": "JUMP"
    },
    "2566": {
      "op": "JUMPDEST"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2569": {
      "op": "DUP4"
    },
    "2570": {
      "op": "ADD"
    },
    "2571": {
      "op": "SWAP5"
    },
    "2572": {
      "op": "SWAP1"
    },
    "2573": {
      "op": "SWAP5"
    },
    "2574": {
      "op": "MSTORE"
    },
    "2575": {
      "op": "POP"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2578": {
      "op": "ADD"
    },
    "2579": {
      "op": "MSTORE"
    },
    "2580": {
      "op": "SWAP2"
    },
    "2581": {
      "op": "SWAP1"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "c191e7ea9a1db4c56242adb42104bc479e1dee40",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.14;\nimport \"./console.sol\";\n\n/// @title Voting with delegation.\ncontract Ballot {\n    // This declares a new complex type which will\n    // be used for variables later.\n    // It will represent a single voter.\n    struct Voter {\n        uint256 weight; // weight is accumulated by delegation\n        bool voted; // if true, that person already voted\n        address delegate; // person delegated to\n        uint256 vote; // index of the voted proposal\n    }\n\n    // This is a type for a single proposal.\n    struct Proposal {\n        bytes32 name; // short name (up to 32 bytes)\n        uint256 voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    // This declares a state variable that\n    // stores a `Voter` struct for each possible address.\n    mapping(address => Voter) public voters;\n\n    // A dynamically-sized array of `Proposal` structs.\n    Proposal[] public proposals;\n\n    /// Create a new ballot to choose one of `proposalNames`.\n    constructor(bytes32[] memory proposalNames) {\n        console.log(\"constructor() called\");\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        // For each of the provided proposal names,\n        // create a new proposal object and add it\n        // to the end of the array.\n        for (uint256 i = 0; i < proposalNames.length; i++) {\n            // `Proposal({...})` creates a temporary\n            // Proposal object and `proposals.push(...)`\n            // appends it to the end of `proposals`.\n            proposals.push(Proposal({name: proposalNames[i], voteCount: 0}));\n            console.log(\"proposalNames[%d]=\", i);\n            console.logBytes32(proposalNames[i]);\n        }\n        console.log(\"constructor() chairperson=%s\", chairperson);\n        console.log(\"constructor() passed\");\n    }\n\n    // Give `voter` the right to vote on this ballot.\n    // May only be called by `chairperson`.\n    function giveRightToVote(address voter) external {\n        // If the first argument of `require` evaluates\n        // to `false`, execution terminates and all\n        // changes to the state and to Ether balances\n        // are reverted.\n        // This used to consume all gas in old EVM versions, but\n        // not anymore.\n        // It is often a good idea to use `require` to check if\n        // functions are called correctly.\n        // As a second argument, you can also provide an\n        // explanation about what went wrong.\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can give right to vote.\"\n        );\n        require(!voters[voter].voted, \"The voter already voted.\");\n        require(voters[voter].weight == 0);\n        voters[voter].weight = 1;\n    }\n\n    /// Delegate your vote to the voter `to`.\n    function delegate(address to) external {\n        // assigns reference\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted.\");\n\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\n\n        // Forward the delegation as long as\n        // `to` also delegated.\n        // In general, such loops are very dangerous,\n        // because if they run too long, they might\n        // need more gas than is available in a block.\n        // In this case, the delegation will not be executed,\n        // but in other situations, such loops might\n        // cause a contract to get \"stuck\" completely.\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender, \"Found loop in delegation.\");\n        }\n\n        // Since `sender` is a reference, this\n        // modifies `voters[msg.sender].voted`\n        Voter storage delegate_ = voters[to];\n\n        // Voters cannot delegate to wallets that cannot vote.\n        require(delegate_.weight >= 1);\n        sender.voted = true;\n        sender.delegate = to;\n        if (delegate_.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate_.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate_.weight += sender.weight;\n        }\n    }\n\n    /// Give your vote (including votes delegated to you)\n    /// to proposal `proposals[proposal].name`.\n    function vote(uint256 proposal) external {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight != 0, \"Has no right to vote\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If `proposal` is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /// @dev Computes the winning proposal taking all\n    /// previous votes into account.\n    function winningProposal() public view returns (uint256 winningProposal_) {\n        uint256 winningVoteCount = 0;\n        for (uint256 p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                console.log(\n                    \"proposals[%d].voteCount=\",\n                    p,\n                    proposals[p].voteCount\n                );\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    // Calls winningProposal() function to get the index\n    // of the winner contained in the proposals array and then\n    // returns the name of the winner\n    function winnerName() external view returns (bytes32 winnerName_) {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n    function proposalsCount() external view returns (uint256) {\n        return proposals.length;\n    }\n\n}\n",
  "sourceMap": "120:5852:0:-:0;;;1036:833;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1090:35;;;;;;;;;;;;;;;;;;:11;;;;;:35;;:::i;:::-;1135:11;:24;;-1:-1:-1;;;;;;1135:24:0;1149:10;1135:24;;;;;1169:19;;1135:24;1169:19;;;;;;;:30;1349:403;1373:13;:20;1369:1;:24;1349:403;;;1577:9;1592:48;;;;;;;;1608:13;1622:1;1608:16;;;;;;;;:::i;:::-;;;;;;;;;;;;1592:48;;1637:1;1592:48;;;;;;1577:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:36;;;;;;;;;;;;-1:-1:-1;;;1655:36:0;;;;;;1689:1;;1655:11;;;;;:36;;:::i;:::-;1705;1724:13;1738:1;1724:16;;;;;;;;:::i;:::-;;;;;;;1705:18;;;;;:36;;:::i;:::-;1395:3;;;;:::i;:::-;;;;1349:403;;;;1761:56;;;;;;;;;;;;;;;;;;1805:11;;;;;;;;-1:-1:-1;;;;;1805:11:0;1761;;;;;:56;;:::i;:::-;1827:35;;;;;;;;;;;;;;;;;;:11;;;;;:35;;:::i;:::-;1036:833;120:5852;;5053:112:1;5102:59;5157:2;5118:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5118:42:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5118:42:1;;;-1:-1:-1;;;5118:42:1;;;;5102:15;:59;:::i;:::-;5053:112;:::o;5887:130::-;5945:68;6005:2;6009;5961:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5961:51:1;;;;;;;;;;;;;;-1:-1:-1;;;;;5961:51:1;;;-1:-1:-1;;;5961:51:1;;;;5945:15;:68;:::i;:::-;5887:130;;:::o;4832:114::-;4882:60;4938:2;4898:43;;;;;;2769:25:2;;2757:2;2742:18;;2623:177;4898:43:1;;;;-1:-1:-1;;4898:43:1;;;;;;;;;;;;;;-1:-1:-1;;;;;4898:43:1;;;-1:-1:-1;;;4898:43:1;;;;4882:15;:60;:::i;6297:136::-;6358:71;6421:2;6425;6374:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6374:54:1;;;;;;;;;;;;;;-1:-1:-1;;;;;6374:54:1;;;-1:-1:-1;;;6374:54:1;;;;6358:15;:71;:::i;175:288::-;263:14;;128:42;372:2;359:16;;239:21;;263:14;359:16;128:42;399:5;388:68;379:77;;334:126;;175:288;:::o;14:127:2:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1105;241:6;272:2;315;303:9;294:7;290:23;286:32;283:52;;;331:1;328;321:12;283:52;358:16;;-1:-1:-1;;;;;423:14:2;;;420:34;;;450:1;447;440:12;420:34;488:6;477:9;473:22;463:32;;533:7;526:4;522:2;518:13;514:27;504:55;;555:1;552;545:12;504:55;584:2;578:9;606:2;602;599:10;596:36;;;612:18;;:::i;:::-;658:2;655:1;651:10;690:2;684:9;753:2;749:7;744:2;740;736:11;732:25;724:6;720:38;808:6;796:10;793:22;788:2;776:10;773:18;770:46;767:72;;;819:18;;:::i;:::-;855:2;848:22;905:18;;;939:15;;;;-1:-1:-1;981:11:2;;;977:20;;;1009:19;;;1006:39;;;1041:1;1038;1031:12;1006:39;1065:11;;;;1085:135;1101:6;1096:3;1093:15;1085:135;;;1167:10;;1155:23;;1118:12;;;;1198;;;;1085:135;;;1239:6;146:1105;-1:-1:-1;;;;;;;;146:1105:2:o;1256:127::-;1317:10;1312:3;1308:20;1305:1;1298:31;1348:4;1345:1;1338:15;1372:4;1369:1;1362:15;1388:232;1427:3;1448:17;;;1445:140;;1507:10;1502:3;1498:20;1495:1;1488:31;1542:4;1539:1;1532:15;1570:4;1567:1;1560:15;1445:140;-1:-1:-1;1612:1:2;1601:13;;1388:232::o;1625:472::-;1667:3;1705:5;1699:12;1732:6;1727:3;1720:19;1757:1;1767:162;1781:6;1778:1;1775:13;1767:162;;;1843:4;1899:13;;;1895:22;;1889:29;1871:11;;;1867:20;;1860:59;1796:12;1767:162;;;1947:6;1944:1;1941:13;1938:87;;;2013:1;2006:4;1997:6;1992:3;1988:16;1984:27;1977:38;1938:87;-1:-1:-1;2079:2:2;2058:15;-1:-1:-1;;2054:29:2;2045:39;;;;2086:4;2041:50;;1625:472;-1:-1:-1;;1625:472:2:o;2102:220::-;2251:2;2240:9;2233:21;2214:4;2271:45;2312:2;2301:9;2297:18;2289:6;2271:45;:::i;:::-;2263:53;2102:220;-1:-1:-1;;;2102:220:2:o;2327:291::-;2504:2;2493:9;2486:21;2467:4;2524:45;2565:2;2554:9;2550:18;2542:6;2524:45;:::i;:::-;2516:53;;2605:6;2600:2;2589:9;2585:18;2578:34;2327:291;;;;;:::o;2805:317::-;2982:2;2971:9;2964:21;2945:4;3002:45;3043:2;3032:9;3028:18;3020:6;3002:45;:::i;:::-;2994:53;;3112:1;3108;3103:3;3099:11;3095:19;3087:6;3083:32;3078:2;3067:9;3063:18;3056:60;2805:317;;;;;:::o;:::-;120:5852:0;;;;;;",
  "sourcePath": "contracts/Ballot.sol",
  "type": "contract"
}