{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "proposalNames",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "chairperson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "giveRightToVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposal",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "vote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerName",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "winnerName_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "winningProposal_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Ballot.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ballot.sol",
    "exportedSymbols": {
      "Ballot": [
        331
      ]
    },
    "id": 332,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ballot",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "62:35:0",
          "text": "@title Voting with delegation."
        },
        "fullyImplemented": true,
        "id": 331,
        "linearizedBaseContracts": [
          331
        ],
        "name": "Ballot",
        "nameLocation": "106:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Ballot.Voter",
            "id": 11,
            "members": [
              {
                "constant": false,
                "id": 4,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "278:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "270:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "270:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "338:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "333:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 5,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "delegate",
                "nameLocation": "399:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "391:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "391:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "vote",
                "nameLocation": "448:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 11,
                "src": "440:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "440:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "254:5:0",
            "nodeType": "StructDefinition",
            "scope": 331,
            "src": "247:243:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Ballot.Proposal",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "575:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "567:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 12,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "567:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "628:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "620:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "620:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "548:8:0",
            "nodeType": "StructDefinition",
            "scope": 331,
            "src": "541:134:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e4176cf",
            "id": 18,
            "mutability": "mutable",
            "name": "chairperson",
            "nameLocation": "696:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "681:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "681:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 23,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "848:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "815:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
              "typeString": "mapping(address => struct Ballot.Voter)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "823:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "815:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                "typeString": "mapping(address => struct Ballot.Voter)"
              },
              "valueType": {
                "id": 21,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 20,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11,
                  "src": "834:5:0"
                },
                "referencedDeclaration": 11,
                "src": "834:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                  "typeString": "struct Ballot.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 27,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "935:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "917:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
              "typeString": "struct Ballot.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16,
                  "src": "917:8:0"
                },
                "referencedDeclaration": 16,
                "src": "917:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$16_storage_ptr",
                  "typeString": "struct Ballot.Proposal"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "917:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr",
                "typeString": "struct Ballot.Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1057:533:0",
              "statements": [
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1067:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 35,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1081:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1081:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1067:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:24:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 39,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "1101:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 41,
                        "indexExpression": {
                          "id": 40,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1108:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1101:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "1101:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1130:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1101:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:30:0"
                },
                {
                  "body": {
                    "id": 68,
                    "nodeType": "Block",
                    "src": "1332:252:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 61,
                                    "name": "proposalNames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "1540:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 63,
                                  "indexExpression": {
                                    "id": 62,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47,
                                    "src": "1554:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1540:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 64,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1569:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 60,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "1524:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$16_storage_ptr_$",
                                  "typeString": "type(struct Ballot.Proposal storage pointer)"
                                }
                              },
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "voteCount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1524:48:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 57,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1509:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                                "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1509:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$16_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1509:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 67,
                        "nodeType": "ExpressionStatement",
                        "src": "1509:64:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1301:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 51,
                        "name": "proposalNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1305:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1305:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1301:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69,
                  "initializationExpression": {
                    "assignments": [
                      47
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1294:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 69,
                        "src": "1286:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1286:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 49,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1298:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1286:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1327:3:0",
                      "subExpression": {
                        "id": 54,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1327:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 56,
                    "nodeType": "ExpressionStatement",
                    "src": "1327:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1281:303:0"
                }
              ]
            },
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "951:57:0",
              "text": "Create a new ballot to choose one of `proposalNames`."
            },
            "id": 71,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "proposalNames",
                  "nameLocation": "1042:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1025:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 29,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1025:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 30,
                    "nodeType": "ArrayTypeName",
                    "src": "1025:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1024:32:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:0"
            },
            "scope": 331,
            "src": "1013:577:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1743:760:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2260:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2260:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 79,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "2274:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2260:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2299:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
                          "typeString": "literal_string \"Only chairperson can give right to vote.\""
                        },
                        "value": "Only chairperson can give right to vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
                          "typeString": "literal_string \"Only chairperson can give right to vote.\""
                        }
                      ],
                      "id": 76,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2239:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:112:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2369:20:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 85,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "2370:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 87,
                            "indexExpression": {
                              "id": 86,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "2377:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2370:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "2370:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520766f74657220616c726561647920766f7465642e",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2391:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
                          "typeString": "literal_string \"The voter already voted.\""
                        },
                        "value": "The voter already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
                          "typeString": "literal_string \"The voter already voted.\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2361:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "2361:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 94,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "2436:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 96,
                            "indexExpression": {
                              "id": 95,
                              "name": "voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "2443:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2436:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "2436:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2460:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2436:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 93,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2428:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:34:0"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 102,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2472:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 104,
                        "indexExpression": {
                          "id": 103,
                          "name": "voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "2479:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2472:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "2472:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2495:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2472:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2472:24:0"
                }
              ]
            },
            "functionSelector": "9e7b8d61",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveRightToVote",
            "nameLocation": "1703:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1727:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1719:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1718:15:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:0:0"
            },
            "scope": 331,
            "src": "1694:809:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "2594:1561:0",
              "statements": [
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "2647:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 213,
                      "src": "2633:20:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 117,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 116,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "2633:5:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "2633:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "baseExpression": {
                      "id": 119,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2656:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 122,
                    "indexExpression": {
                      "expression": {
                        "id": 120,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2663:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2663:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2656:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$11_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2633:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2692:13:0",
                        "subExpression": {
                          "expression": {
                            "id": 125,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "2693:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "2693:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920766f7465642e",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2707:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
                          "typeString": "literal_string \"You already voted.\""
                        },
                        "value": "You already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
                          "typeString": "literal_string \"You already voted.\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2684:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 132,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2747:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 133,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2753:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2753:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2747:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2765:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
                          "typeString": "literal_string \"Self-delegation is disallowed.\""
                        },
                        "value": "Self-delegation is disallowed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
                          "typeString": "literal_string \"Self-delegation is disallowed.\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2739:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2739:59:0"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "3259:181:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 148,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "3273:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 149,
                                "name": "voters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "3278:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                                  "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                                }
                              },
                              "id": 151,
                              "indexExpression": {
                                "id": 150,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "3285:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3278:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage",
                                "typeString": "struct Ballot.Voter storage ref"
                              }
                            },
                            "id": 152,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "3278:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3273:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 154,
                        "nodeType": "ExpressionStatement",
                        "src": "3273:24:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 156,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "3383:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 157,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3389:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 158,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3389:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3383:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3401:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
                                "typeString": "literal_string \"Found loop in delegation.\""
                              },
                              "value": "Found loop in delegation."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
                                "typeString": "literal_string \"Found loop in delegation.\""
                              }
                            ],
                            "id": 155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3375:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3375:54:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "3375:54:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 139,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "3224:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "id": 140,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "3231:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3224:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "3224:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3255:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3247:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3247:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3247:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3224:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 164,
                  "nodeType": "WhileStatement",
                  "src": "3217:223:0"
                },
                {
                  "assignments": [
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 167,
                      "mutability": "mutable",
                      "name": "delegate_",
                      "nameLocation": "3558:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 213,
                      "src": "3544:23:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 165,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "3544:5:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "3544:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "baseExpression": {
                      "id": 168,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3570:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 170,
                    "indexExpression": {
                      "id": 169,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "3577:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3570:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$11_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3544:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 173,
                            "name": "delegate_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3662:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "3662:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3682:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3662:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f746572732063616e6e6f742064656c656761746520746f2077616c6c65747320746861742063616e6e6f7420766f74652e",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3684:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39a97a2ed0236dcfaa3da23d47e651a6f074cddf00bb157c1942c5f98adf514a",
                          "typeString": "literal_string \"Voters cannot delegate to wallets that cannot vote.\""
                        },
                        "value": "Voters cannot delegate to wallets that cannot vote."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39a97a2ed0236dcfaa3da23d47e651a6f074cddf00bb157c1942c5f98adf514a",
                          "typeString": "literal_string \"Voters cannot delegate to wallets that cannot vote.\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3654:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3654:84:0"
                },
                {
                  "expression": {
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 180,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3748:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "3748:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3763:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3748:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:19:0"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 186,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3777:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "3777:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 189,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "3795:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3777:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3777:20:0"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 192,
                      "name": "delegate_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3811:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                        "typeString": "struct Ballot.Voter storage pointer"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "voted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6,
                    "src": "3811:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "4008:141:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 204,
                              "name": "delegate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "4105:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "4105:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 207,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "4125:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "4125:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4105:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "4105:33:0"
                      }
                    ]
                  },
                  "id": 212,
                  "nodeType": "IfStatement",
                  "src": "3807:342:0",
                  "trueBody": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "3828:174:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 194,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "3939:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 197,
                              "indexExpression": {
                                "expression": {
                                  "id": 195,
                                  "name": "delegate_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "3949:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                    "typeString": "struct Ballot.Voter storage pointer"
                                  }
                                },
                                "id": 196,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "vote",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10,
                                "src": "3949:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3939:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$16_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "3939:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 199,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 118,
                              "src": "3978:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                                "typeString": "struct Ballot.Voter storage pointer"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "weight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4,
                            "src": "3978:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3939:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3939:52:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "2509:41:0",
              "text": "Delegate your vote to the voter `to`."
            },
            "functionSelector": "5c19a95c",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "2564:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2581:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "2573:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:12:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:0:0"
            },
            "scope": 331,
            "src": "2555:1600:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "4308:422:0",
              "statements": [
                {
                  "assignments": [
                    222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 222,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "4332:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 263,
                      "src": "4318:20:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 221,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 220,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "4318:5:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "4318:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 227,
                  "initialValue": {
                    "baseExpression": {
                      "id": 223,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4341:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 226,
                    "indexExpression": {
                      "expression": {
                        "id": 224,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4348:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4348:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4341:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$11_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4318:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 229,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "4377:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4,
                          "src": "4377:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4394:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4377:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173206e6f20726967687420746f20766f7465",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4397:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
                          "typeString": "literal_string \"Has no right to vote\""
                        },
                        "value": "Has no right to vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
                          "typeString": "literal_string \"Has no right to vote\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4369:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:51:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4438:13:0",
                        "subExpression": {
                          "expression": {
                            "id": 237,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "4439:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6,
                          "src": "4439:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f7465642e",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4453:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
                          "typeString": "literal_string \"Already voted.\""
                        },
                        "value": "Already voted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
                          "typeString": "literal_string \"Already voted.\""
                        }
                      ],
                      "id": 236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4430:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "4430:40:0"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 243,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4480:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "4480:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4495:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4480:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "4480:19:0"
                },
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 249,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4509:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4509:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 252,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "4523:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4509:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "4509:22:0"
                },
                {
                  "expression": {
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 255,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "4677:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 257,
                        "indexExpression": {
                          "id": 256,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "4687:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4677:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$16_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "4677:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 259,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "4710:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "4710:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4677:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:46:0"
                }
              ]
            },
            "documentation": {
              "id": 215,
              "nodeType": "StructuredDocumentation",
              "src": "4161:101:0",
              "text": "Give your vote (including votes delegated to you)\n to proposal `proposals[proposal].name`."
            },
            "functionSelector": "0121b93f",
            "id": 264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "4276:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "proposal",
                  "nameLocation": "4289:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "4281:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4280:18:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4308:0:0"
            },
            "scope": 331,
            "src": "4267:463:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "4901:284:0",
              "statements": [
                {
                  "assignments": [
                    271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 271,
                      "mutability": "mutable",
                      "name": "winningVoteCount",
                      "nameLocation": "4919:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 306,
                      "src": "4911:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4911:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 273,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4938:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4911:28:0"
                },
                {
                  "body": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "4996:183:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 285,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "5014:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 287,
                              "indexExpression": {
                                "id": 286,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 275,
                                "src": "5024:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5014:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$16_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "5014:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 289,
                            "name": "winningVoteCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "5039:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5014:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 303,
                        "nodeType": "IfStatement",
                        "src": "5010:159:0",
                        "trueBody": {
                          "id": 302,
                          "nodeType": "Block",
                          "src": "5057:112:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 291,
                                  "name": "winningVoteCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 271,
                                  "src": "5075:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 292,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "5094:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 294,
                                    "indexExpression": {
                                      "id": 293,
                                      "name": "p",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 275,
                                      "src": "5104:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5094:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$16_storage",
                                      "typeString": "struct Ballot.Proposal storage ref"
                                    }
                                  },
                                  "id": 295,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15,
                                  "src": "5094:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5075:41:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 297,
                              "nodeType": "ExpressionStatement",
                              "src": "5075:41:0"
                            },
                            {
                              "expression": {
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 298,
                                  "name": "winningProposal_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 268,
                                  "src": "5134:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 299,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 275,
                                  "src": "5153:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5134:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 301,
                              "nodeType": "ExpressionStatement",
                              "src": "5134:20:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 278,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "4969:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 279,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4973:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4973:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4969:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 305,
                  "initializationExpression": {
                    "assignments": [
                      275
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "4962:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "4954:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4954:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 277,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4966:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4954:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4991:3:0",
                      "subExpression": {
                        "id": 282,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4991:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 284,
                    "nodeType": "ExpressionStatement",
                    "src": "4991:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4949:230:0"
                }
              ]
            },
            "documentation": {
              "id": 265,
              "nodeType": "StructuredDocumentation",
              "src": "4736:86:0",
              "text": "@dev Computes the winning proposal taking all\n previous votes into account."
            },
            "functionSelector": "609ff1bd",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningProposal",
            "nameLocation": "4836:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4851:2:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "winningProposal_",
                  "nameLocation": "4883:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "4875:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4875:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4874:26:0"
            },
            "scope": 331,
            "src": "4827:358:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "5415:64:0",
              "statements": [
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "winnerName_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "5425:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 313,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "5439:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 316,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 314,
                            "name": "winningProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "5449:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5449:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5439:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$16_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "5439:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5425:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "5425:47:0"
                }
              ]
            },
            "functionSelector": "e2ba53f0",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winnerName",
            "nameLocation": "5358:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5368:2:0"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "winnerName_",
                  "nameLocation": "5402:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5394:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:21:0"
            },
            "scope": 331,
            "src": "5349:130:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "5542:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 326,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "5559:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5559:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 325,
                  "id": 328,
                  "nodeType": "Return",
                  "src": "5552:23:0"
                }
              ]
            },
            "functionSelector": "0a9f46ad",
            "id": 330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposalsCount",
            "nameLocation": "5493:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5507:2:0"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "5533:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5533:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5532:9:0"
            },
            "scope": 331,
            "src": "5484:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 332,
        "src": "97:5488:0",
        "usedErrors": []
      }
    ],
    "src": "36:5550:0"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516109e63803806109e683398101604081905261002f916100e2565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a61019f565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd816101b5565b915050610052565b50506101dc565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100f557600080fd5b82516001600160401b038082111561010c57600080fd5b818501915085601f83011261012057600080fd5b815181811115610132576101326100cc565b8060051b604051601f19603f83011681018181108582111715610157576101576100cc565b60405291825284820192508381018501918883111561017557600080fd5b938501935b828510156101935784518452938501939285019261017a565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016101d557634e487b7160e01b600052601160045260246000fd5b5060010190565b6107fb806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635c19a95c116100665780635c19a95c14610117578063609ff1bd1461012a5780639e7b8d6114610132578063a3ec138d14610145578063e2ba53f0146101b657600080fd5b80630121b93f14610098578063013cf08b146100ad5780630a9f46ad146100da5780632e4176cf146100ec575b600080fd5b6100ab6100a636600461071f565b6101be565b005b6100c06100bb36600461071f565b6102b8565b604080519283526020830191909152015b60405180910390f35b6002545b6040519081526020016100d1565b6000546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100ab610125366004610738565b6102e6565b6100de610557565b6100ab610140366004610738565b6105d4565b610187610153366004610738565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100d1949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b6100de6106ec565b336000908152600160205260408120805490910361021a5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102605760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b6044820152606401610211565b6001818101805460ff191690911790556002808201839055815481549091908490811061028f5761028f610768565b906000526020600020906002020160010160008282546102af9190610794565b90915550505050565b600281815481106102c857600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103415760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610211565b336001600160a01b038316036103995760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610211565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561043d576001600160a01b03918216600090815260016020819052604090912001546101009004909116903382036104385760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610211565b610399565b6001600160a01b03821660009081526001602081905260409091208054909111156104c65760405162461bcd60e51b815260206004820152603360248201527f566f746572732063616e6e6f742064656c656761746520746f2077616c6c657460448201527239903a3430ba1031b0b73737ba103b37ba329760691b6064820152608401610211565b600182810180546001600160a81b0319166101006001600160a01b03871602178217905581015460ff16156105385781546002828101548154811061050d5761050d610768565b9060005260206000209060020201600101600082825461052d9190610794565b909155506105529050565b81548154829060009061054c908490610794565b90915550505b505050565b600080805b6002548110156105cf57816002828154811061057a5761057a610768565b90600052602060002090600202016001015411156105bd57600281815481106105a5576105a5610768565b90600052602060002090600202016001015491508092505b806105c7816107ac565b91505061055c565b505090565b6000546001600160a01b0316331461063f5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610211565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106ac5760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610211565b6001600160a01b038116600090815260016020526040902054156106cf57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106f8610557565b8154811061070857610708610768565b906000526020600020906002020160000154905090565b60006020828403121561073157600080fd5b5035919050565b60006020828403121561074a57600080fd5b81356001600160a01b038116811461076157600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156107a7576107a761077e565b500190565b6000600182016107be576107be61077e565b506001019056fea2646970667358221220f7e989a71d804b6f8bd0c925ee64756636c02cac66c2a2637b026736cbb05c0264736f6c634300080e0033",
  "bytecodeSha1": "ce02ca6842a7a726ee87de63655f88c4f00d8bb0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Ballot",
  "coverageMap": {
    "branches": {
      "0": {
        "Ballot.delegate": {
          "25": [
            2692,
            2705,
            true
          ],
          "26": [
            2747,
            2763,
            true
          ],
          "27": [
            3383,
            3399,
            true
          ],
          "28": [
            3662,
            3683,
            true
          ],
          "29": [
            3811,
            3826,
            false
          ]
        },
        "Ballot.giveRightToVote": {
          "31": [
            2260,
            2285,
            true
          ],
          "32": [
            2369,
            2389,
            true
          ],
          "33": [
            2436,
            2461,
            true
          ]
        },
        "Ballot.vote": {
          "23": [
            4377,
            4395,
            true
          ],
          "24": [
            4438,
            4451,
            true
          ]
        },
        "Ballot.winningProposal": {
          "30": [
            5014,
            5055,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ballot.delegate": {
          "6": [
            2684,
            2728
          ],
          "7": [
            2739,
            2798
          ],
          "8": [
            3273,
            3297
          ],
          "9": [
            3375,
            3429
          ],
          "10": [
            3654,
            3738
          ],
          "11": [
            3748,
            3767
          ],
          "12": [
            3777,
            3797
          ],
          "13": [
            3939,
            3991
          ],
          "14": [
            4105,
            4138
          ]
        },
        "Ballot.giveRightToVote": {
          "18": [
            2239,
            2351
          ],
          "19": [
            2361,
            2418
          ],
          "20": [
            2428,
            2462
          ],
          "21": [
            2472,
            2496
          ]
        },
        "Ballot.proposalsCount": {
          "0": [
            5552,
            5575
          ]
        },
        "Ballot.vote": {
          "1": [
            4369,
            4420
          ],
          "2": [
            4430,
            4470
          ],
          "3": [
            4480,
            4499
          ],
          "4": [
            4509,
            4531
          ],
          "5": [
            4677,
            4723
          ]
        },
        "Ballot.winnerName": {
          "22": [
            5425,
            5472
          ]
        },
        "Ballot.winningProposal": {
          "15": [
            5075,
            5116
          ],
          "16": [
            5134,
            5154
          ],
          "17": [
            4991,
            4994
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80635c19a95c116100665780635c19a95c14610117578063609ff1bd1461012a5780639e7b8d6114610132578063a3ec138d14610145578063e2ba53f0146101b657600080fd5b80630121b93f14610098578063013cf08b146100ad5780630a9f46ad146100da5780632e4176cf146100ec575b600080fd5b6100ab6100a636600461071f565b6101be565b005b6100c06100bb36600461071f565b6102b8565b604080519283526020830191909152015b60405180910390f35b6002545b6040519081526020016100d1565b6000546100ff906001600160a01b031681565b6040516001600160a01b0390911681526020016100d1565b6100ab610125366004610738565b6102e6565b6100de610557565b6100ab610140366004610738565b6105d4565b610187610153366004610738565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100d1949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b6100de6106ec565b336000908152600160205260408120805490910361021a5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102605760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b6044820152606401610211565b6001818101805460ff191690911790556002808201839055815481549091908490811061028f5761028f610768565b906000526020600020906002020160010160008282546102af9190610794565b90915550505050565b600281815481106102c857600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103415760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610211565b336001600160a01b038316036103995760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610211565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561043d576001600160a01b03918216600090815260016020819052604090912001546101009004909116903382036104385760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610211565b610399565b6001600160a01b03821660009081526001602081905260409091208054909111156104c65760405162461bcd60e51b815260206004820152603360248201527f566f746572732063616e6e6f742064656c656761746520746f2077616c6c657460448201527239903a3430ba1031b0b73737ba103b37ba329760691b6064820152608401610211565b600182810180546001600160a81b0319166101006001600160a01b03871602178217905581015460ff16156105385781546002828101548154811061050d5761050d610768565b9060005260206000209060020201600101600082825461052d9190610794565b909155506105529050565b81548154829060009061054c908490610794565b90915550505b505050565b600080805b6002548110156105cf57816002828154811061057a5761057a610768565b90600052602060002090600202016001015411156105bd57600281815481106105a5576105a5610768565b90600052602060002090600202016001015491508092505b806105c7816107ac565b91505061055c565b505090565b6000546001600160a01b0316331461063f5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610211565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106ac5760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610211565b6001600160a01b038116600090815260016020526040902054156106cf57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106f8610557565b8154811061070857610708610768565b906000526020600020906002020160000154905090565b60006020828403121561073157600080fd5b5035919050565b60006020828403121561074a57600080fd5b81356001600160a01b038116811461076157600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156107a7576107a761077e565b500190565b6000600182016107be576107be61077e565b506001019056fea2646970667358221220f7e989a71d804b6f8bd0c925ee64756636c02cac66c2a2637b026736cbb05c0264736f6c634300080e0033",
  "deployedSourceMap": "97:5488:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:463;;;;;;:::i;:::-;;:::i;:::-;;917:27;;;;;;:::i;:::-;;:::i;:::-;;;;373:25:1;;;429:2;414:18;;407:34;;;;346:18;917:27:0;;;;;;;;5484:98;5559:9;:16;5484:98;;;598:25:1;;;586:2;571:18;5484:98:0;452:177:1;681:26:0;;;;;-1:-1:-1;;;;;681:26:0;;;;;;-1:-1:-1;;;;;798:32:1;;;780:51;;768:2;753:18;681:26:0;634:203:1;2555:1600:0;;;;;;:::i;:::-;;:::i;4827:358::-;;;:::i;1694:809::-;;;;;;:::i;:::-;;:::i;815:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;815:39:0;;;;;;;;;;;;;1358:25:1;;;1426:14;;1419:22;1414:2;1399:18;;1392:50;-1:-1:-1;;;;;1478:32:1;1473:2;1458:18;;1451:60;1542:2;1527:18;;1520:34;1345:3;1330:19;;1133:427;5349:130:0;;;:::i;4267:463::-;4348:10;4318:20;4341:18;;;:6;:18;;;;;4377:13;;4341:18;;4377;4369:51;;;;-1:-1:-1;;;4369:51:0;;1949:2:1;4369:51:0;;;1931:21:1;1988:2;1968:18;;;1961:30;-1:-1:-1;;;2007:18:1;;;2000:50;2067:18;;4369:51:0;;;;;;;;;4439:12;;;;;;4438:13;4430:40;;;;-1:-1:-1;;;4430:40:0;;2298:2:1;4430:40:0;;;2280:21:1;2337:2;2317:18;;;2310:30;-1:-1:-1;;;2356:18:1;;;2349:44;2410:18;;4430:40:0;2096:338:1;4430:40:0;4495:4;4480:12;;;:19;;-1:-1:-1;;4480:19:0;;;;;;4509:11;;;;:22;;;4710:13;;4677:19;;4710:13;;4509:11;4523:8;;4677:19;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;4267:463:0:o;917:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;917:27:0;:::o;2555:1600::-;2663:10;2633:20;2656:18;;;:6;:18;;;;;;;;2693:12;;;;;;2692:13;2684:44;;;;-1:-1:-1;;;2684:44:0;;3038:2:1;2684:44:0;;;3020:21:1;3077:2;3057:18;;;3050:30;-1:-1:-1;;;3096:18:1;;;3089:48;3154:18;;2684:44:0;2836:342:1;2684:44:0;2753:10;-1:-1:-1;;;;;2747:16:0;;;2739:59;;;;-1:-1:-1;;;2739:59:0;;3385:2:1;2739:59:0;;;3367:21:1;3424:2;3404:18;;;3397:30;3463:32;3443:18;;;3436:60;3513:18;;2739:59:0;3183:354:1;2739:59:0;-1:-1:-1;;;;;3224:10:0;;;3255:1;3224:10;;;:6;:10;;;;;;;;:19;;;;;;:33;3217:223;;-1:-1:-1;;;;;3278:10:0;;;;;;;:6;:10;;;;;;;;:19;;;;;;;;;3389:10;3383:16;;3375:54;;;;-1:-1:-1;;;3375:54:0;;3744:2:1;3375:54:0;;;3726:21:1;3783:2;3763:18;;;3756:30;3822:27;3802:18;;;3795:55;3867:18;;3375:54:0;3542:349:1;3375:54:0;3217:223;;;-1:-1:-1;;;;;3570:10:0;;3544:23;3570:10;;;:6;:10;;;;;;;;3662:16;;3570:10;;-1:-1:-1;3662:21:0;3654:84;;;;-1:-1:-1;;;3654:84:0;;4098:2:1;3654:84:0;;;4080:21:1;4137:2;4117:18;;;4110:30;4176:34;4156:18;;;4149:62;-1:-1:-1;;;4227:18:1;;;4220:49;4286:19;;3654:84:0;3896:415:1;3654:84:0;3763:4;3748:12;;;:19;;-1:-1:-1;;;;;;3777:20:0;3748:19;-1:-1:-1;;;;;3777:20:0;;;;;;;;3811:15;;;3748:19;3811:15;3807:342;;;3978:13;;3939:9;3949:14;;;;3939:25;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;3807:342:0;;-1:-1:-1;3807:342:0;;4125:13;;4105:33;;:9;;4125:13;;4105:33;;4125:13;;4105:33;:::i;:::-;;;;-1:-1:-1;;3807:342:0;2594:1561;;2555:1600;:::o;4827:358::-;4875:24;;;4949:230;4973:9;:16;4969:20;;4949:230;;;5039:16;5014:9;5024:1;5014:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:41;5010:159;;;5094:9;5104:1;5094:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;5075:41;;5153:1;5134:20;;5010:159;4991:3;;;;:::i;:::-;;;;4949:230;;;;4901:284;4827:358;:::o;1694:809::-;2274:11;;-1:-1:-1;;;;;2274:11:0;2260:10;:25;2239:112;;;;-1:-1:-1;;;2239:112:0;;4658:2:1;2239:112:0;;;4640:21:1;4697:2;4677:18;;;4670:30;4736:34;4716:18;;;4709:62;-1:-1:-1;;;4787:18:1;;;4780:38;4835:19;;2239:112:0;4456:404:1;2239:112:0;-1:-1:-1;;;;;2370:13:0;;;;;;:6;:13;;;;;;;;:19;;;;2369:20;2361:57;;;;-1:-1:-1;;;2361:57:0;;5067:2:1;2361:57:0;;;5049:21:1;5106:2;5086:18;;;5079:30;5145:26;5125:18;;;5118:54;5189:18;;2361:57:0;4865:348:1;2361:57:0;-1:-1:-1;;;;;2436:13:0;;;;;;:6;:13;;;;;:20;:25;2428:34;;;;;;-1:-1:-1;;;;;2472:13:0;;;;;2495:1;2472:13;;;;;;;;:24;1694:809::o;5349:130::-;5394:19;5439:9;5449:17;:15;:17::i;:::-;5439:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;5425:47;;5349:130;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;842:286::-;901:6;954:2;942:9;933:7;929:23;925:32;922:52;;;970:1;967;960:12;922:52;996:23;;-1:-1:-1;;;;;1048:31:1;;1038:42;;1028:70;;1094:1;1091;1084:12;1028:70;1117:5;842:286;-1:-1:-1;;;842:286:1:o;2439:127::-;2500:10;2495:3;2491:20;2488:1;2481:31;2531:4;2528:1;2521:15;2555:4;2552:1;2545:15;2571:127;2632:10;2627:3;2623:20;2620:1;2613:31;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2703:128;2743:3;2774:1;2770:6;2767:1;2764:13;2761:39;;;2780:18;;:::i;:::-;-1:-1:-1;2816:9:1;;2703:128::o;4316:135::-;4355:3;4376:17;;;4373:43;;4396:18;;:::i;:::-;-1:-1:-1;4443:1:1;4432:13;;4316:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "notice": "Create a new ballot to choose one of `proposalNames`."
      },
      "delegate(address)": {
        "notice": "Delegate your vote to the voter `to`."
      },
      "vote(uint256)": {
        "notice": "Give your vote (including votes delegated to you) to proposal `proposals[proposal].name`."
      },
      "winningProposal()": {
        "details": "Computes the winning proposal taking all previous votes into account."
      }
    },
    "title": "Voting with delegation.",
    "version": 1
  },
  "offset": [
    97,
    5585
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C19A95C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9F46AD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x71F JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x557 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x6EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x260 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x28F JUMPI PUSH2 0x28F PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x43D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 SUB PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 GT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746572732063616E6E6F742064656C656761746520746F2077616C6C6574 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x39903A3430BA1031B0B73737BA103B37BA3297 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND MUL OR DUP3 OR SWAP1 SSTORE DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x538 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x50D JUMPI PUSH2 0x50D PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x552 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x54C SWAP1 DUP5 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5CF JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x5C7 DUP2 PUSH2 0x7AC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x55C JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6F8 PUSH2 0x557 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x708 PUSH2 0x768 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x77E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x7BE JUMPI PUSH2 0x7BE PUSH2 0x77E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xE9 DUP10 0xA7 SAR DUP1 0x4B PUSH16 0x8BD0C925EE64756636C02CAC66C2A263 PUSH28 0x26736CBB05C0264736F6C634300080E003300000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C19A95C"
    },
    "38": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C19A95C"
    },
    "49": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "53": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x609FF1BD"
    },
    "60": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "64": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E7B8D61"
    },
    "71": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "75": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA3EC138D"
    },
    "82": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x145"
    },
    "86": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2BA53F0"
    },
    "93": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "97": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x121B93F"
    },
    "109": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13CF08B"
    },
    "120": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "124": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9F46AD"
    },
    "131": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA"
    },
    "135": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E4176CF"
    },
    "142": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "146": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        97,
        5585
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "156": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "159": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "160": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "162": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71F"
    },
    "165": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMP",
      "path": "0"
    },
    "166": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "167": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "170": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMP",
      "path": "0"
    },
    "171": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "STOP",
      "path": "0"
    },
    "173": {
      "offset": [
        917,
        944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "177": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "180": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "181": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "183": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71F"
    },
    "186": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        917,
        944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "187": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "191": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        917,
        944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP1",
      "path": "0"
    },
    "196": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "op": "SWAP3"
    },
    "198": {
      "op": "DUP4"
    },
    "199": {
      "op": "MSTORE"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "202": {
      "op": "DUP4"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "op": "SWAP2"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "SWAP2"
    },
    "207": {
      "op": "MSTORE"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "offset": [
        917,
        944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "212": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "213": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "215": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SUB",
      "path": "0"
    },
    "216": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "217": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "RETURN",
      "path": "0"
    },
    "218": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5484,
        5582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "219": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5559,
        5568
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "221": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5559,
        5575
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "222": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5484,
        5582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5484,
        5582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "225": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5484,
        5582
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "226": {
      "op": "SWAP1"
    },
    "227": {
      "op": "DUP2"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "231": {
      "op": "ADD"
    },
    "232": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        5484,
        5582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "235": {
      "op": "JUMP"
    },
    "236": {
      "offset": [
        681,
        707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "239": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "240": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF"
    },
    "243": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "250": {
      "op": "SHL"
    },
    "251": {
      "op": "SUB"
    },
    "252": {
      "offset": [
        681,
        707
      ],
      "op": "AND",
      "path": "0"
    },
    "253": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "254": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "JUMP",
      "path": "0"
    },
    "255": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "256": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "258": {
      "fn": "Ballot.proposalsCount",
      "offset": [
        681,
        707
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "265": {
      "op": "SHL"
    },
    "266": {
      "op": "SUB"
    },
    "267": {
      "op": "SWAP1"
    },
    "268": {
      "op": "SWAP2"
    },
    "269": {
      "op": "AND"
    },
    "270": {
      "op": "DUP2"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "offset": [
        681,
        707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "278": {
      "op": "JUMP"
    },
    "279": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "283": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125"
    },
    "286": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "287": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "289": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x738"
    },
    "292": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        2555,
        4155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "293": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "294": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E6"
    },
    "297": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        2555,
        4155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "298": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4827,
        5185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4827,
        5185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "302": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4827,
        5185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x557"
    },
    "305": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        4827,
        5185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "310": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "313": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "314": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "316": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x738"
    },
    "319": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        1694,
        2503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D4"
    },
    "324": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        1694,
        2503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "325": {
      "offset": [
        815,
        854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "326": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "329": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "332": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "333": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "335": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x738"
    },
    "338": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        815,
        854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "339": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "342": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "344": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "345": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "346": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "347": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "349": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "350": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DUP3",
      "path": "0"
    },
    "351": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "352": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "354": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "355": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "356": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "357": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DUP1",
      "path": "0"
    },
    "358": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "359": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "360": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DUP2",
      "path": "0"
    },
    "361": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "ADD",
      "path": "0"
    },
    "362": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "363": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "365": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "367": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "ADD",
      "path": "0"
    },
    "368": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "369": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "371": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DUP3",
      "path": "0"
    },
    "372": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "AND",
      "path": "0"
    },
    "373": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "374": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "377": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "378": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DIV",
      "path": "0"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "385": {
      "op": "SHL"
    },
    "386": {
      "op": "SUB"
    },
    "387": {
      "offset": [
        815,
        854
      ],
      "op": "AND",
      "path": "0"
    },
    "388": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "389": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "DUP5",
      "path": "0"
    },
    "390": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "394": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "395": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "398": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "399": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "400": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "401": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "402": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "403": {
      "op": "SWAP4"
    },
    "404": {
      "op": "DUP5"
    },
    "405": {
      "op": "MSTORE"
    },
    "406": {
      "op": "SWAP2"
    },
    "407": {
      "op": "ISZERO"
    },
    "408": {
      "op": "ISZERO"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "DUP5"
    },
    "412": {
      "op": "ADD"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "op": "AND"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "425": {
      "op": "DUP4"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "MSTORE"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "430": {
      "op": "DUP3"
    },
    "431": {
      "op": "ADD"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "SWAP1"
    },
    "437": {
      "op": "JUMP"
    },
    "438": {
      "fn": "Ballot.winnerName",
      "offset": [
        5349,
        5479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "fn": "Ballot.winnerName",
      "offset": [
        5349,
        5479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "442": {
      "fn": "Ballot.winnerName",
      "offset": [
        5349,
        5479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EC"
    },
    "445": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        5349,
        5479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "Ballot.vote",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "Ballot.vote",
      "offset": [
        4348,
        4358
      ],
      "op": "CALLER",
      "path": "0"
    },
    "448": {
      "fn": "Ballot.vote",
      "offset": [
        4318,
        4338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "450": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "451": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "452": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "453": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "455": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "457": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "458": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "460": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "461": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "462": {
      "fn": "Ballot.vote",
      "offset": [
        4377,
        4390
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "463": {
      "fn": "Ballot.vote",
      "offset": [
        4377,
        4390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "464": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "465": {
      "fn": "Ballot.vote",
      "offset": [
        4341,
        4359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "466": {
      "branch": 23,
      "fn": "Ballot.vote",
      "offset": [
        4377,
        4395
      ],
      "op": "SUB",
      "path": "0"
    },
    "467": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A"
    },
    "470": {
      "branch": 23,
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "471": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "473": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "474": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "DUP2",
      "path": "0"
    },
    "482": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "485": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "487": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "DUP3",
      "path": "0"
    },
    "488": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "ADD",
      "path": "0"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH20",
      "value": "0x486173206E6F20726967687420746F20766F7465"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "ADD"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "532": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "533": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "DUP1",
      "path": "0"
    },
    "534": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "535": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "SUB",
      "path": "0"
    },
    "536": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "537": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "538": {
      "fn": "Ballot.vote",
      "offset": [
        4369,
        4420
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "539": {
      "fn": "Ballot.vote",
      "offset": [
        4439,
        4451
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "541": {
      "fn": "Ballot.vote",
      "offset": [
        4439,
        4451
      ],
      "op": "DUP2",
      "path": "0"
    },
    "542": {
      "fn": "Ballot.vote",
      "offset": [
        4439,
        4451
      ],
      "op": "ADD",
      "path": "0"
    },
    "543": {
      "fn": "Ballot.vote",
      "offset": [
        4439,
        4451
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "544": {
      "fn": "Ballot.vote",
      "offset": [
        4439,
        4451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "546": {
      "fn": "Ballot.vote",
      "offset": [
        4439,
        4451
      ],
      "op": "AND",
      "path": "0"
    },
    "547": {
      "branch": 24,
      "fn": "Ballot.vote",
      "offset": [
        4438,
        4451
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "548": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x260"
    },
    "551": {
      "branch": 24,
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "552": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "554": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "DUP2",
      "path": "0"
    },
    "563": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "566": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "568": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "DUP3",
      "path": "0"
    },
    "569": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "ADD",
      "path": "0"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "575": {
      "op": "DUP3"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "PUSH14",
      "value": "0x20B63932B0B23C903B37BA32B217"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "598": {
      "op": "DUP3"
    },
    "599": {
      "op": "ADD"
    },
    "600": {
      "op": "MSTORE"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "603": {
      "op": "ADD"
    },
    "604": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "607": {
      "op": "JUMP"
    },
    "608": {
      "fn": "Ballot.vote",
      "offset": [
        4430,
        4470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "609": {
      "fn": "Ballot.vote",
      "offset": [
        4495,
        4499
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "611": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "612": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "613": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4492
      ],
      "op": "ADD",
      "path": "0"
    },
    "614": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "615": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "616": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "618": {
      "op": "NOT"
    },
    "619": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "AND",
      "path": "0"
    },
    "620": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "622": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "OR",
      "path": "0"
    },
    "623": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "624": {
      "fn": "Ballot.vote",
      "offset": [
        4480,
        4499
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "625": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4520
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x2"
    },
    "627": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4520
      ],
      "op": "DUP1",
      "path": "0"
    },
    "628": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4520
      ],
      "op": "DUP3",
      "path": "0"
    },
    "629": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4520
      ],
      "op": "ADD",
      "path": "0"
    },
    "630": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "631": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "632": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4531
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "633": {
      "fn": "Ballot.vote",
      "offset": [
        4710,
        4723
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "634": {
      "fn": "Ballot.vote",
      "offset": [
        4710,
        4723
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "635": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "636": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "637": {
      "fn": "Ballot.vote",
      "offset": [
        4710,
        4723
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "638": {
      "fn": "Ballot.vote",
      "offset": [
        4710,
        4723
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "639": {
      "fn": "Ballot.vote",
      "offset": [
        4509,
        4520
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "640": {
      "fn": "Ballot.vote",
      "offset": [
        4523,
        4531
      ],
      "op": "DUP5",
      "path": "0"
    },
    "641": {
      "fn": "Ballot.vote",
      "offset": [
        4523,
        4531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "642": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "643": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "LT",
      "path": "0"
    },
    "644": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "647": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "648": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "651": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x768"
    },
    "654": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4677,
        4696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "655": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "656": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "657": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "659": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "660": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "662": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "664": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "665": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "666": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "668": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "MUL",
      "path": "0"
    },
    "669": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4696
      ],
      "op": "ADD",
      "path": "0"
    },
    "670": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "672": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4706
      ],
      "op": "ADD",
      "path": "0"
    },
    "673": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "675": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "DUP3",
      "path": "0"
    },
    "676": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "DUP3",
      "path": "0"
    },
    "677": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "678": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "681": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "683": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "686": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        4677,
        4723
      ],
      "op": "JUMP",
      "path": "0"
    },
    "687": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "688": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "690": {
      "fn": "Ballot.vote",
      "offset": [
        4677,
        4723
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        4267,
        4730
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "offset": [
        917,
        944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "699": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "700": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "701": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "702": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "LT",
      "path": "0"
    },
    "704": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "707": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "708": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "710": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "REVERT",
      "path": "0"
    },
    "712": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "715": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "716": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP3",
      "path": "0"
    },
    "717": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "718": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "720": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "722": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "723": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "725": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "727": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "MUL",
      "path": "0"
    },
    "728": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "ADD",
      "path": "0"
    },
    "729": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "DUP1",
      "path": "0"
    },
    "730": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "731": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "733": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "734": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "735": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "ADD",
      "path": "0"
    },
    "736": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "737": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "Ballot.vote",
      "offset": [
        917,
        944
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "739": {
      "op": "POP"
    },
    "740": {
      "offset": [
        917,
        944
      ],
      "op": "DUP3",
      "path": "0"
    },
    "741": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        917,
        944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "742": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "743": {
      "fn": "Ballot.delegate",
      "offset": [
        2663,
        2673
      ],
      "op": "CALLER",
      "path": "0"
    },
    "744": {
      "fn": "Ballot.delegate",
      "offset": [
        2633,
        2653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "746": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "748": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "749": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "751": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "753": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "754": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "755": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "756": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "758": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "759": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "760": {
      "fn": "Ballot.delegate",
      "offset": [
        2656,
        2674
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "761": {
      "fn": "Ballot.delegate",
      "offset": [
        2693,
        2705
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 6
    },
    "762": {
      "fn": "Ballot.delegate",
      "offset": [
        2693,
        2705
      ],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "Ballot.delegate",
      "offset": [
        2693,
        2705
      ],
      "op": "ADD",
      "path": "0"
    },
    "764": {
      "fn": "Ballot.delegate",
      "offset": [
        2693,
        2705
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "765": {
      "fn": "Ballot.delegate",
      "offset": [
        2693,
        2705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "767": {
      "fn": "Ballot.delegate",
      "offset": [
        2693,
        2705
      ],
      "op": "AND",
      "path": "0"
    },
    "768": {
      "branch": 25,
      "fn": "Ballot.delegate",
      "offset": [
        2692,
        2705
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "769": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "772": {
      "branch": 25,
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "773": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "775": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "DUP2",
      "path": "0"
    },
    "784": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "787": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "789": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "DUP3",
      "path": "0"
    },
    "790": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "ADD",
      "path": "0"
    },
    "791": {
      "op": "MSTORE"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "796": {
      "op": "DUP3"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH18",
      "value": "0x2CB7BA9030B63932B0B23C903B37BA32B217"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "823": {
      "op": "DUP3"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "832": {
      "op": "JUMP"
    },
    "833": {
      "fn": "Ballot.delegate",
      "offset": [
        2684,
        2728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "fn": "Ballot.delegate",
      "offset": [
        2753,
        2763
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "Ballot.delegate",
      "offset": [
        2747,
        2763
      ],
      "op": "DUP4",
      "path": "0"
    },
    "844": {
      "fn": "Ballot.delegate",
      "offset": [
        2747,
        2763
      ],
      "op": "AND",
      "path": "0"
    },
    "845": {
      "branch": 26,
      "fn": "Ballot.delegate",
      "offset": [
        2747,
        2763
      ],
      "op": "SUB",
      "path": "0"
    },
    "846": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "849": {
      "branch": 26,
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "850": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "852": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "861": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "864": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "866": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "DUP3",
      "path": "0"
    },
    "867": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "ADD",
      "path": "0"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "873": {
      "op": "DUP3"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH32",
      "value": "0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "920": {
      "op": "JUMP"
    },
    "921": {
      "fn": "Ballot.delegate",
      "offset": [
        2739,
        2798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "SUB"
    },
    "930": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "931": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "932": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "AND",
      "path": "0"
    },
    "933": {
      "fn": "Ballot.delegate",
      "offset": [
        3255,
        3256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "935": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "937": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "938": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "940": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "942": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "943": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "944": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "945": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "947": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "948": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "949": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3234
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "950": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3243
      ],
      "op": "ADD",
      "path": "0"
    },
    "951": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3243
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "952": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "955": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "956": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3243
      ],
      "op": "DIV",
      "path": "0"
    },
    "957": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3243
      ],
      "op": "AND",
      "path": "0"
    },
    "958": {
      "fn": "Ballot.delegate",
      "offset": [
        3224,
        3257
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "959": {
      "fn": "Ballot.delegate",
      "offset": [
        3217,
        3440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43D"
    },
    "962": {
      "fn": "Ballot.delegate",
      "offset": [
        3217,
        3440
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "op": "SUB"
    },
    "971": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 8
    },
    "972": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "DUP3",
      "path": "0"
    },
    "973": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "AND",
      "path": "0"
    },
    "974": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "976": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "977": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "978": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "979": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "981": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "983": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "DUP2",
      "path": "0"
    },
    "984": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "985": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "986": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "988": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "990": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3288
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "991": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "ADD",
      "path": "0"
    },
    "992": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "993": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "996": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "DIV",
      "path": "0"
    },
    "998": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1000": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "AND",
      "path": "0"
    },
    "1001": {
      "fn": "Ballot.delegate",
      "offset": [
        3278,
        3297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "Ballot.delegate",
      "offset": [
        3389,
        3399
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "1003": {
      "fn": "Ballot.delegate",
      "offset": [
        3383,
        3399
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1004": {
      "branch": 27,
      "fn": "Ballot.delegate",
      "offset": [
        3383,
        3399
      ],
      "op": "SUB",
      "path": "0"
    },
    "1005": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x438"
    },
    "1008": {
      "branch": 27,
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1009": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1011": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1020": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1023": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1025": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1026": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "ADD",
      "path": "0"
    },
    "1027": {
      "op": "MSTORE"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1032": {
      "op": "DUP3"
    },
    "1033": {
      "op": "ADD"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH32",
      "value": "0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1070": {
      "op": "DUP3"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "MSTORE"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1079": {
      "op": "JUMP"
    },
    "1080": {
      "fn": "Ballot.delegate",
      "offset": [
        3375,
        3429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1081": {
      "fn": "Ballot.delegate",
      "offset": [
        3217,
        3440
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x399"
    },
    "1084": {
      "fn": "Ballot.delegate",
      "offset": [
        3217,
        3440
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1085": {
      "fn": "Ballot.delegate",
      "offset": [
        3217,
        3440
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1095": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "AND",
      "path": "0"
    },
    "1096": {
      "fn": "Ballot.delegate",
      "offset": [
        3544,
        3567
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1098": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1100": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1101": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1103": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1105": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1106": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1108": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1110": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1111": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1112": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1113": {
      "fn": "Ballot.delegate",
      "offset": [
        3662,
        3678
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 10
    },
    "1114": {
      "fn": "Ballot.delegate",
      "offset": [
        3662,
        3678
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1115": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1116": {
      "fn": "Ballot.delegate",
      "offset": [
        3570,
        3580
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1117": {
      "op": "GT"
    },
    "1118": {
      "branch": 28,
      "fn": "Ballot.delegate",
      "offset": [
        3662,
        3683
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1119": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C6"
    },
    "1122": {
      "branch": 28,
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1123": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1125": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1126": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1134": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1137": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1139": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1140": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "ADD",
      "path": "0"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1146": {
      "op": "DUP3"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "MSTORE"
    },
    "1149": {
      "op": "PUSH32",
      "value": "0x566F746572732063616E6E6F742064656C656761746520746F2077616C6C6574"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1184": {
      "op": "DUP3"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "op": "PUSH19",
      "value": "0x39903A3430BA1031B0B73737BA103B37BA3297"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1212": {
      "op": "DUP3"
    },
    "1213": {
      "op": "ADD"
    },
    "1214": {
      "op": "MSTORE"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1221": {
      "op": "JUMP"
    },
    "1222": {
      "fn": "Ballot.delegate",
      "offset": [
        3654,
        3738
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1223": {
      "fn": "Ballot.delegate",
      "offset": [
        3763,
        3767
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1225": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3760
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1226": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3760
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1227": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3760
      ],
      "op": "ADD",
      "path": "0"
    },
    "1228": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1229": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3767
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "op": "NOT"
    },
    "1239": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "AND",
      "path": "0",
      "statement": 12
    },
    "1240": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1252": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "AND",
      "path": "0"
    },
    "1253": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "MUL",
      "path": "0"
    },
    "1254": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "OR",
      "path": "0"
    },
    "1255": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1256": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "OR",
      "path": "0"
    },
    "1257": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1258": {
      "fn": "Ballot.delegate",
      "offset": [
        3777,
        3797
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1259": {
      "fn": "Ballot.delegate",
      "offset": [
        3811,
        3826
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1260": {
      "fn": "Ballot.delegate",
      "offset": [
        3811,
        3826
      ],
      "op": "ADD",
      "path": "0"
    },
    "1261": {
      "fn": "Ballot.delegate",
      "offset": [
        3811,
        3826
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1262": {
      "fn": "Ballot.delegate",
      "offset": [
        3748,
        3767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1264": {
      "branch": 29,
      "fn": "Ballot.delegate",
      "offset": [
        3811,
        3826
      ],
      "op": "AND",
      "path": "0"
    },
    "1265": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1266": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x538"
    },
    "1269": {
      "branch": 29,
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1270": {
      "fn": "Ballot.delegate",
      "offset": [
        3978,
        3991
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "1271": {
      "fn": "Ballot.delegate",
      "offset": [
        3978,
        3991
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1272": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1274": {
      "fn": "Ballot.delegate",
      "offset": [
        3949,
        3963
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1275": {
      "fn": "Ballot.delegate",
      "offset": [
        3949,
        3963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1276": {
      "fn": "Ballot.delegate",
      "offset": [
        3949,
        3963
      ],
      "op": "ADD",
      "path": "0"
    },
    "1277": {
      "fn": "Ballot.delegate",
      "offset": [
        3949,
        3963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1278": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1279": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1280": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1281": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "LT",
      "path": "0"
    },
    "1282": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50D"
    },
    "1285": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1286": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50D"
    },
    "1289": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x768"
    },
    "1292": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        3939,
        3964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1293": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1294": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1297": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1298": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1300": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1302": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1303": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1304": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1306": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "MUL",
      "path": "0"
    },
    "1307": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3964
      ],
      "op": "ADD",
      "path": "0"
    },
    "1308": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1310": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3974
      ],
      "op": "ADD",
      "path": "0"
    },
    "1311": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1313": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1314": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1315": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1316": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "1319": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1320": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1321": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "1324": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        3939,
        3991
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1325": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1327": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1328": {
      "fn": "Ballot.delegate",
      "offset": [
        3939,
        3991
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x552"
    },
    "1333": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1336": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1337": {
      "fn": "Ballot.delegate",
      "offset": [
        4125,
        4138
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "1338": {
      "fn": "Ballot.delegate",
      "offset": [
        4125,
        4138
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1339": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1340": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1341": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4114
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1342": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1343": {
      "fn": "Ballot.delegate",
      "offset": [
        4125,
        4138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1345": {
      "fn": "Ballot.delegate",
      "offset": [
        4125,
        4138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1346": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "1349": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1350": {
      "fn": "Ballot.delegate",
      "offset": [
        4125,
        4138
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1351": {
      "fn": "Ballot.delegate",
      "offset": [
        4125,
        4138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1352": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x794"
    },
    "1355": {
      "fn": "Ballot.delegate",
      "jump": "i",
      "offset": [
        4105,
        4138
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1356": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1357": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1358": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1359": {
      "fn": "Ballot.delegate",
      "offset": [
        4105,
        4138
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "fn": "Ballot.delegate",
      "offset": [
        3807,
        4149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1363": {
      "fn": "Ballot.delegate",
      "offset": [
        2594,
        4155
      ],
      "op": "POP",
      "path": "0"
    },
    "1364": {
      "fn": "Ballot.delegate",
      "offset": [
        2594,
        4155
      ],
      "op": "POP",
      "path": "0"
    },
    "1365": {
      "fn": "Ballot.delegate",
      "offset": [
        2555,
        4155
      ],
      "op": "POP",
      "path": "0"
    },
    "1366": {
      "fn": "Ballot.delegate",
      "jump": "o",
      "offset": [
        2555,
        4155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1367": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4827,
        5185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1368": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4875,
        4899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1370": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4875,
        4899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1371": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4875,
        4899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1372": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1373": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4973,
        4982
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1375": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4973,
        4989
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1376": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4969,
        4989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1377": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4969,
        4989
      ],
      "op": "LT",
      "path": "0"
    },
    "1378": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1379": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CF"
    },
    "1382": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1383": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5039,
        5055
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1384": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1386": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5024,
        5025
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1387": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1388": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1389": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "LT",
      "path": "0"
    },
    "1391": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57A"
    },
    "1394": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1395": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57A"
    },
    "1398": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x768"
    },
    "1401": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5014,
        5026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1402": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1403": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1404": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1406": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1407": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1409": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1411": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1412": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1413": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1415": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "MUL",
      "path": "0"
    },
    "1416": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5026
      ],
      "op": "ADD",
      "path": "0"
    },
    "1417": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1419": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5036
      ],
      "op": "ADD",
      "path": "0"
    },
    "1420": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1421": {
      "branch": 30,
      "fn": "Ballot.winningProposal",
      "offset": [
        5014,
        5055
      ],
      "op": "GT",
      "path": "0"
    },
    "1422": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5010,
        5169
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1423": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5010,
        5169
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BD"
    },
    "1426": {
      "branch": 30,
      "fn": "Ballot.winningProposal",
      "offset": [
        5010,
        5169
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1427": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5103
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x2"
    },
    "1429": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5104,
        5105
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1430": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1431": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1432": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1433": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "LT",
      "path": "0"
    },
    "1434": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A5"
    },
    "1437": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1438": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A5"
    },
    "1441": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x768"
    },
    "1444": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        5094,
        5106
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1445": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1446": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1447": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1449": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1450": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1452": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1454": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1455": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1456": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1458": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "MUL",
      "path": "0"
    },
    "1459": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5106
      ],
      "op": "ADD",
      "path": "0"
    },
    "1460": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1462": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5116
      ],
      "op": "ADD",
      "path": "0"
    },
    "1463": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5094,
        5116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1464": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5075,
        5116
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1465": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5075,
        5116
      ],
      "op": "POP",
      "path": "0"
    },
    "1466": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5153,
        5154
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 16
    },
    "1467": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5134,
        5154
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1468": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5134,
        5154
      ],
      "op": "POP",
      "path": "0"
    },
    "1469": {
      "fn": "Ballot.winningProposal",
      "offset": [
        5010,
        5169
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1470": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 17
    },
    "1471": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C7"
    },
    "1474": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AC"
    },
    "1478": {
      "fn": "Ballot.winningProposal",
      "jump": "i",
      "offset": [
        4991,
        4994
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1479": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1480": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1481": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "POP",
      "path": "0"
    },
    "1482": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4991,
        4994
      ],
      "op": "POP",
      "path": "0"
    },
    "1483": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55C"
    },
    "1486": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1487": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1488": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4949,
        5179
      ],
      "op": "POP",
      "path": "0"
    },
    "1489": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4901,
        5185
      ],
      "op": "POP",
      "path": "0"
    },
    "1490": {
      "fn": "Ballot.winningProposal",
      "offset": [
        4827,
        5185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1491": {
      "fn": "Ballot.winningProposal",
      "jump": "o",
      "offset": [
        4827,
        5185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1492": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        1694,
        2503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1493": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2274,
        2285
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "1495": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2274,
        2285
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2274,
        2285
      ],
      "op": "AND",
      "path": "0"
    },
    "1505": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2260,
        2270
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1506": {
      "branch": 31,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2260,
        2285
      ],
      "op": "EQ",
      "path": "0"
    },
    "1507": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63F"
    },
    "1510": {
      "branch": 31,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1511": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1513": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1520": {
      "op": "SHL"
    },
    "1521": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1522": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1525": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1527": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1528": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "ADD",
      "path": "0"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1534": {
      "op": "DUP3"
    },
    "1535": {
      "op": "ADD"
    },
    "1536": {
      "op": "MSTORE"
    },
    "1537": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1572": {
      "op": "DUP3"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH8",
      "value": "0x3A37903B37BA3297"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1589": {
      "op": "DUP3"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1594": {
      "op": "ADD"
    },
    "1595": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1598": {
      "op": "JUMP"
    },
    "1599": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2239,
        2351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1606": {
      "op": "SHL"
    },
    "1607": {
      "op": "SUB"
    },
    "1608": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1609": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "AND",
      "path": "0"
    },
    "1610": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1612": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1613": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1614": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1615": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1617": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1619": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1620": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1621": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1622": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1624": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1625": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1626": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2383
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1627": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2389
      ],
      "op": "ADD",
      "path": "0"
    },
    "1628": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2389
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1629": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1631": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2370,
        2389
      ],
      "op": "AND",
      "path": "0"
    },
    "1632": {
      "branch": 32,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2369,
        2389
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1633": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "1636": {
      "branch": 32,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1637": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1639": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1648": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1651": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1653": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1654": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "ADD",
      "path": "0"
    },
    "1655": {
      "op": "MSTORE"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1660": {
      "op": "DUP3"
    },
    "1661": {
      "op": "ADD"
    },
    "1662": {
      "op": "MSTORE"
    },
    "1663": {
      "op": "PUSH32",
      "value": "0x54686520766F74657220616C726561647920766F7465642E0000000000000000"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1698": {
      "op": "DUP3"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "op": "MSTORE"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "1707": {
      "op": "JUMP"
    },
    "1708": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2361,
        2418
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1715": {
      "op": "SHL"
    },
    "1716": {
      "op": "SUB"
    },
    "1717": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 20
    },
    "1718": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "AND",
      "path": "0"
    },
    "1719": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1721": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1722": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1723": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1724": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1726": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1728": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1729": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1731": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1732": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2449
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1733": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2456
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1734": {
      "branch": 33,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2436,
        2461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1735": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2428,
        2462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1738": {
      "branch": 33,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2428,
        2462
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1739": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2428,
        2462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1741": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2428,
        2462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1742": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2428,
        2462
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1743": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2428,
        2462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "op": "SUB"
    },
    "1752": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "AND",
      "path": "0",
      "statement": 21
    },
    "1753": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1755": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1756": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1757": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1758": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2495,
        2496
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1760": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1762": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1763": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1764": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1765": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1767": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1768": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1769": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2485
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1770": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2472,
        2496
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1771": {
      "fn": "Ballot.giveRightToVote",
      "jump": "o",
      "offset": [
        1694,
        2503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1772": {
      "fn": "Ballot.winnerName",
      "offset": [
        5349,
        5479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1773": {
      "fn": "Ballot.winnerName",
      "offset": [
        5394,
        5413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1775": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5448
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x2"
    },
    "1777": {
      "fn": "Ballot.winnerName",
      "offset": [
        5449,
        5466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F8"
    },
    "1780": {
      "fn": "Ballot.winnerName",
      "offset": [
        5449,
        5464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x557"
    },
    "1783": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        5449,
        5466
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1784": {
      "fn": "Ballot.winnerName",
      "offset": [
        5449,
        5466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1785": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1786": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1787": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1788": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "LT",
      "path": "0"
    },
    "1789": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "1792": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1793": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "1796": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x768"
    },
    "1799": {
      "fn": "Ballot.winnerName",
      "jump": "i",
      "offset": [
        5439,
        5467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1800": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1804": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1805": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1807": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1809": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1810": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1811": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1813": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "MUL",
      "path": "0"
    },
    "1814": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5467
      ],
      "op": "ADD",
      "path": "0"
    },
    "1815": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1817": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5472
      ],
      "op": "ADD",
      "path": "0"
    },
    "1818": {
      "fn": "Ballot.winnerName",
      "offset": [
        5439,
        5472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1819": {
      "fn": "Ballot.winnerName",
      "offset": [
        5425,
        5472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1820": {
      "fn": "Ballot.winnerName",
      "offset": [
        5425,
        5472
      ],
      "op": "POP",
      "path": "0"
    },
    "1821": {
      "fn": "Ballot.winnerName",
      "offset": [
        5349,
        5479
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1822": {
      "fn": "Ballot.winnerName",
      "jump": "o",
      "offset": [
        5349,
        5479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "DUP5"
    },
    "1830": {
      "op": "SUB"
    },
    "1831": {
      "op": "SLT"
    },
    "1832": {
      "op": "ISZERO"
    },
    "1833": {
      "op": "PUSH2",
      "value": "0x731"
    },
    "1836": {
      "op": "JUMPI"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1839": {
      "op": "DUP1"
    },
    "1840": {
      "op": "REVERT"
    },
    "1841": {
      "op": "JUMPDEST"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "CALLDATALOAD"
    },
    "1844": {
      "op": "SWAP2"
    },
    "1845": {
      "op": "SWAP1"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "jump": "o",
      "op": "JUMP"
    },
    "1848": {
      "op": "JUMPDEST"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1853": {
      "op": "DUP3"
    },
    "1854": {
      "op": "DUP5"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "op": "SLT"
    },
    "1857": {
      "op": "ISZERO"
    },
    "1858": {
      "op": "PUSH2",
      "value": "0x74A"
    },
    "1861": {
      "op": "JUMPI"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1864": {
      "op": "DUP1"
    },
    "1865": {
      "op": "REVERT"
    },
    "1866": {
      "op": "JUMPDEST"
    },
    "1867": {
      "op": "DUP2"
    },
    "1868": {
      "op": "CALLDATALOAD"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "op": "DUP2"
    },
    "1878": {
      "op": "AND"
    },
    "1879": {
      "op": "DUP2"
    },
    "1880": {
      "op": "EQ"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x761"
    },
    "1884": {
      "op": "JUMPI"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1887": {
      "op": "DUP1"
    },
    "1888": {
      "op": "REVERT"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "SWAP4"
    },
    "1891": {
      "op": "SWAP3"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "jump": "o",
      "op": "JUMP"
    },
    "1896": {
      "op": "JUMPDEST"
    },
    "1897": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1904": {
      "op": "SHL"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1912": {
      "op": "MSTORE"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1917": {
      "op": "REVERT"
    },
    "1918": {
      "op": "JUMPDEST"
    },
    "1919": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1934": {
      "op": "MSTORE"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1939": {
      "op": "REVERT"
    },
    "1940": {
      "op": "JUMPDEST"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "NOT"
    },
    "1945": {
      "op": "DUP3"
    },
    "1946": {
      "op": "GT"
    },
    "1947": {
      "op": "ISZERO"
    },
    "1948": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "1951": {
      "op": "JUMPI"
    },
    "1952": {
      "op": "PUSH2",
      "value": "0x7A7"
    },
    "1955": {
      "op": "PUSH2",
      "value": "0x77E"
    },
    "1958": {
      "jump": "i",
      "op": "JUMP"
    },
    "1959": {
      "op": "JUMPDEST"
    },
    "1960": {
      "op": "POP"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "op": "SWAP1"
    },
    "1963": {
      "jump": "o",
      "op": "JUMP"
    },
    "1964": {
      "op": "JUMPDEST"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "DUP3"
    },
    "1970": {
      "op": "ADD"
    },
    "1971": {
      "op": "PUSH2",
      "value": "0x7BE"
    },
    "1974": {
      "op": "JUMPI"
    },
    "1975": {
      "op": "PUSH2",
      "value": "0x7BE"
    },
    "1978": {
      "op": "PUSH2",
      "value": "0x77E"
    },
    "1981": {
      "jump": "i",
      "op": "JUMP"
    },
    "1982": {
      "op": "JUMPDEST"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "ADD"
    },
    "1987": {
      "op": "SWAP1"
    },
    "1988": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "44529246dbda398681292d72656b55805184bcc6",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.14;\n\n\n/// @title Voting with delegation.\ncontract Ballot {\n    // This declares a new complex type which will\n    // be used for variables later.\n    // It will represent a single voter.\n    struct Voter {\n        uint256 weight; // weight is accumulated by delegation\n        bool voted; // if true, that person already voted\n        address delegate; // person delegated to\n        uint256 vote; // index of the voted proposal\n    }\n\n    // This is a type for a single proposal.\n    struct Proposal {\n        bytes32 name; // short name (up to 32 bytes)\n        uint256 voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    // This declares a state variable that\n    // stores a `Voter` struct for each possible address.\n    mapping(address => Voter) public voters;\n\n    // A dynamically-sized array of `Proposal` structs.\n    Proposal[] public proposals;\n\n    /// Create a new ballot to choose one of `proposalNames`.\n    constructor(bytes32[] memory proposalNames) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        // For each of the provided proposal names,\n        // create a new proposal object and add it\n        // to the end of the array.\n        for (uint256 i = 0; i < proposalNames.length; i++) {\n            // `Proposal({...})` creates a temporary\n            // Proposal object and `proposals.push(...)`\n            // appends it to the end of `proposals`.\n            proposals.push(Proposal({name: proposalNames[i], voteCount: 0}));\n        }\n    }\n\n    // Give `voter` the right to vote on this ballot.\n    // May only be called by `chairperson`.\n    function giveRightToVote(address voter) external {\n        // If the first argument of `require` evaluates\n        // to `false`, execution terminates and all\n        // changes to the state and to Ether balances\n        // are reverted.\n        // This used to consume all gas in old EVM versions, but\n        // not anymore.\n        // It is often a good idea to use `require` to check if\n        // functions are called correctly.\n        // As a second argument, you can also provide an\n        // explanation about what went wrong.\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can give right to vote.\"\n        );\n        require(!voters[voter].voted, \"The voter already voted.\");\n        require(voters[voter].weight == 0);\n        voters[voter].weight = 1;\n    }\n\n    /// Delegate your vote to the voter `to`.\n    function delegate(address to) external {\n        // assigns reference\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted.\");\n\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\n\n        // Forward the delegation as long as\n        // `to` also delegated.\n        // In general, such loops are very dangerous,\n        // because if they run too long, they might\n        // need more gas than is available in a block.\n        // In this case, the delegation will not be executed,\n        // but in other situations, such loops might\n        // cause a contract to get \"stuck\" completely.\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender, \"Found loop in delegation.\");\n        }\n\n        // Since `sender` is a reference, this\n        // modifies `voters[msg.sender].voted`\n        Voter storage delegate_ = voters[to];\n\n        // Voters cannot delegate to wallets that cannot vote.\n        require(delegate_.weight >= 1,\"Voters cannot delegate to wallets that cannot vote.\");\n        sender.voted = true;\n        sender.delegate = to;\n        if (delegate_.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate_.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate_.weight += sender.weight;\n        }\n    }\n\n    /// Give your vote (including votes delegated to you)\n    /// to proposal `proposals[proposal].name`.\n    function vote(uint256 proposal) external {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight != 0, \"Has no right to vote\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If `proposal` is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /// @dev Computes the winning proposal taking all\n    /// previous votes into account.\n    function winningProposal() public view returns (uint256 winningProposal_) {\n        uint256 winningVoteCount = 0;\n        for (uint256 p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    // Calls winningProposal() function to get the index\n    // of the winner contained in the proposals array and then\n    // returns the name of the winner\n    function winnerName() external view returns (bytes32 winnerName_) {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n    function proposalsCount() external view returns (uint256) {\n        return proposals.length;\n    }\n\n}\n",
  "sourceMap": "97:5488:0:-:0;;;1013:577;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1067:11;:24;;-1:-1:-1;;;;;;1067:24:0;1081:10;1067:24;;;;;1101:19;;1067:24;1101:19;;;;;;;:30;1281:303;1305:13;:20;1301:1;:24;1281:303;;;1509:9;1524:48;;;;;;;;1540:13;1554:1;1540:16;;;;;;;;:::i;:::-;;;;;;;;;;;;1524:48;;1569:1;1524:48;;;;;;1509:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1327:3;;;;:::i;:::-;;;;1281:303;;;;1013:577;97:5488;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1105;241:6;272:2;315;303:9;294:7;290:23;286:32;283:52;;;331:1;328;321:12;283:52;358:16;;-1:-1:-1;;;;;423:14:1;;;420:34;;;450:1;447;440:12;420:34;488:6;477:9;473:22;463:32;;533:7;526:4;522:2;518:13;514:27;504:55;;555:1;552;545:12;504:55;584:2;578:9;606:2;602;599:10;596:36;;;612:18;;:::i;:::-;658:2;655:1;651:10;690:2;684:9;753:2;749:7;744:2;740;736:11;732:25;724:6;720:38;808:6;796:10;793:22;788:2;776:10;773:18;770:46;767:72;;;819:18;;:::i;:::-;855:2;848:22;905:18;;;939:15;;;;-1:-1:-1;981:11:1;;;977:20;;;1009:19;;;1006:39;;;1041:1;1038;1031:12;1006:39;1065:11;;;;1085:135;1101:6;1096:3;1093:15;1085:135;;;1167:10;;1155:23;;1118:12;;;;1198;;;;1085:135;;;1239:6;146:1105;-1:-1:-1;;;;;;;;146:1105:1:o;1256:127::-;1317:10;1312:3;1308:20;1305:1;1298:31;1348:4;1345:1;1338:15;1372:4;1369:1;1362:15;1388:232;1427:3;1448:17;;;1445:140;;1507:10;1502:3;1498:20;1495:1;1488:31;1542:4;1539:1;1532:15;1570:4;1567:1;1560:15;1445:140;-1:-1:-1;1612:1:1;1601:13;;1388:232::o;:::-;97:5488:0;;;;;;",
  "sourcePath": "contracts/Ballot.sol",
  "type": "contract"
}